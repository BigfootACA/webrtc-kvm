{"version":3,"file":"addon-webgl.js","mappings":"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","sources":["webpack://WebglAddon/webpack/universalModuleDefinition","webpack://WebglAddon/./src/GlyphRenderer.ts","webpack://WebglAddon/./src/RectangleRenderer.ts","webpack://WebglAddon/./src/RenderModel.ts","webpack://WebglAddon/./src/WebglRenderer.ts","webpack://WebglAddon/./src/WebglUtils.ts","webpack://WebglAddon/./src/renderLayer/BaseRenderLayer.ts","webpack://WebglAddon/./src/renderLayer/LinkRenderLayer.ts","webpack://WebglAddon/../../src/browser/Lifecycle.ts","webpack://WebglAddon/../../src/browser/renderer/shared/CellColorResolver.ts","webpack://WebglAddon/../../src/browser/renderer/shared/CharAtlasCache.ts","webpack://WebglAddon/../../src/browser/renderer/shared/CharAtlasUtils.ts","webpack://WebglAddon/../../src/browser/renderer/shared/Constants.ts","webpack://WebglAddon/../../src/browser/renderer/shared/CursorBlinkStateManager.ts","webpack://WebglAddon/../../src/browser/renderer/shared/CustomGlyphs.ts","webpack://WebglAddon/../../src/browser/renderer/shared/DevicePixelObserver.ts","webpack://WebglAddon/../../src/browser/renderer/shared/RendererUtils.ts","webpack://WebglAddon/../../src/browser/renderer/shared/SelectionRenderModel.ts","webpack://WebglAddon/../../src/browser/renderer/shared/TextureAtlas.ts","webpack://WebglAddon/../../src/common/Color.ts","webpack://WebglAddon/../../src/common/EventEmitter.ts","webpack://WebglAddon/../../src/common/Lifecycle.ts","webpack://WebglAddon/../../src/common/MultiKeyMap.ts","webpack://WebglAddon/../../src/common/Platform.ts","webpack://WebglAddon/../../src/common/TaskQueue.ts","webpack://WebglAddon/../../src/common/buffer/AttributeData.ts","webpack://WebglAddon/../../src/common/buffer/CellData.ts","webpack://WebglAddon/../../src/common/buffer/Constants.ts","webpack://WebglAddon/../../src/common/input/TextDecoder.ts","webpack://WebglAddon/../../src/common/services/LogService.ts","webpack://WebglAddon/../../src/common/services/ServiceRegistry.ts","webpack://WebglAddon/../../src/common/services/Services.ts","webpack://WebglAddon/webpack/bootstrap","webpack://WebglAddon/./src/WebglAddon.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WebglAddon\"] = factory();\n\telse\n\t\troot[\"WebglAddon\"] = factory();\n})(self, () => {\nreturn ","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { allowRescaling, throwIfFalsy } from 'browser/renderer/shared/RendererUtils';\nimport { TextureAtlas } from 'browser/renderer/shared/TextureAtlas';\nimport { IRasterizedGlyph, IRenderDimensions, ITextureAtlas } from 'browser/renderer/shared/Types';\nimport { NULL_CELL_CODE } from 'common/buffer/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { Terminal } from '@xterm/xterm';\nimport { IRenderModel, IWebGL2RenderingContext, IWebGLVertexArrayObject } from './Types';\nimport { createProgram, GLTexture, PROJECTION_MATRIX } from './WebglUtils';\nimport type { IOptionsService } from 'common/services/Services';\n\ninterface IVertices {\n  attributes: Float32Array;\n  /**\n   * These buffers are the ones used to bind to WebGL, the reason there are\n   * multiple is to allow double buffering to work as you cannot modify the\n   * buffer while it's being used by the GPU. Having multiple lets us start\n   * working on the next frame.\n   */\n  attributesBuffers: Float32Array[];\n  count: number;\n}\n\nconst enum VertexAttribLocations {\n  UNIT_QUAD = 0,\n  CELL_POSITION = 1,\n  OFFSET = 2,\n  SIZE = 3,\n  TEXPAGE = 4,\n  TEXCOORD = 5,\n  TEXSIZE = 6\n}\n\nconst vertexShaderSource = `#version 300 es\nlayout (location = ${VertexAttribLocations.UNIT_QUAD}) in vec2 a_unitquad;\nlayout (location = ${VertexAttribLocations.CELL_POSITION}) in vec2 a_cellpos;\nlayout (location = ${VertexAttribLocations.OFFSET}) in vec2 a_offset;\nlayout (location = ${VertexAttribLocations.SIZE}) in vec2 a_size;\nlayout (location = ${VertexAttribLocations.TEXPAGE}) in float a_texpage;\nlayout (location = ${VertexAttribLocations.TEXCOORD}) in vec2 a_texcoord;\nlayout (location = ${VertexAttribLocations.TEXSIZE}) in vec2 a_texsize;\n\nuniform mat4 u_projection;\nuniform vec2 u_resolution;\n\nout vec2 v_texcoord;\nflat out int v_texpage;\n\nvoid main() {\n  vec2 zeroToOne = (a_offset / u_resolution) + a_cellpos + (a_unitquad * a_size);\n  gl_Position = u_projection * vec4(zeroToOne, 0.0, 1.0);\n  v_texpage = int(a_texpage);\n  v_texcoord = a_texcoord + a_unitquad * a_texsize;\n}`;\n\nfunction createFragmentShaderSource(maxFragmentShaderTextureUnits: number): string {\n  let textureConditionals = '';\n  for (let i = 1; i < maxFragmentShaderTextureUnits; i++) {\n    textureConditionals += ` else if (v_texpage == ${i}) { outColor = texture(u_texture[${i}], v_texcoord); }`;\n  }\n  return (`#version 300 es\nprecision lowp float;\n\nin vec2 v_texcoord;\nflat in int v_texpage;\n\nuniform sampler2D u_texture[${maxFragmentShaderTextureUnits}];\n\nout vec4 outColor;\n\nvoid main() {\n  if (v_texpage == 0) {\n    outColor = texture(u_texture[0], v_texcoord);\n  } ${textureConditionals}\n}`);\n}\n\nconst INDICES_PER_CELL = 11;\nconst BYTES_PER_CELL = INDICES_PER_CELL * Float32Array.BYTES_PER_ELEMENT;\nconst CELL_POSITION_INDICES = 2;\n\n// Work variables to avoid garbage collection\nlet $i = 0;\nlet $glyph: IRasterizedGlyph | undefined = undefined;\nlet $leftCellPadding = 0;\nlet $clippedPixels = 0;\n\nexport class GlyphRenderer extends Disposable {\n  private readonly _program: WebGLProgram;\n  private readonly _vertexArrayObject: IWebGLVertexArrayObject;\n  private readonly _projectionLocation: WebGLUniformLocation;\n  private readonly _resolutionLocation: WebGLUniformLocation;\n  private readonly _textureLocation: WebGLUniformLocation;\n  private readonly _atlasTextures: GLTexture[];\n  private readonly _attributesBuffer: WebGLBuffer;\n\n  private _atlas: ITextureAtlas | undefined;\n  private _activeBuffer: number = 0;\n  private readonly _vertices: IVertices = {\n    count: 0,\n    attributes: new Float32Array(0),\n    attributesBuffers: [\n      new Float32Array(0),\n      new Float32Array(0)\n    ]\n  };\n\n  constructor(\n    private readonly _terminal: Terminal,\n    private readonly _gl: IWebGL2RenderingContext,\n    private _dimensions: IRenderDimensions,\n    private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    const gl = this._gl;\n\n    if (TextureAtlas.maxAtlasPages === undefined) {\n      // Typically 8 or 16\n      TextureAtlas.maxAtlasPages = Math.min(32, throwIfFalsy(gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS) as number | null));\n      // Almost all clients will support >= 4096\n      TextureAtlas.maxTextureSize = throwIfFalsy(gl.getParameter(gl.MAX_TEXTURE_SIZE) as number | null);\n    }\n\n    this._program = throwIfFalsy(createProgram(gl, vertexShaderSource, createFragmentShaderSource(TextureAtlas.maxAtlasPages)));\n    this.register(toDisposable(() => gl.deleteProgram(this._program)));\n\n    // Uniform locations\n    this._projectionLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_projection'));\n    this._resolutionLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_resolution'));\n    this._textureLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_texture'));\n\n    // Create and set the vertex array object\n    this._vertexArrayObject = gl.createVertexArray();\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    // Setup a_unitquad, this defines the 4 vertices of a rectangle\n    const unitQuadVertices = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const unitQuadVerticesBuffer = gl.createBuffer();\n    this.register(toDisposable(() => gl.deleteBuffer(unitQuadVerticesBuffer)));\n    gl.bindBuffer(gl.ARRAY_BUFFER, unitQuadVerticesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, unitQuadVertices, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(VertexAttribLocations.UNIT_QUAD);\n    gl.vertexAttribPointer(VertexAttribLocations.UNIT_QUAD, 2, this._gl.FLOAT, false, 0, 0);\n\n    // Setup the unit quad element array buffer, this points to indices in\n    // unitQuadVertices to allow is to draw 2 triangles from the vertices via a\n    // triangle strip\n    const unitQuadElementIndices = new Uint8Array([0, 1, 2, 3]);\n    const elementIndicesBuffer = gl.createBuffer();\n    this.register(toDisposable(() => gl.deleteBuffer(elementIndicesBuffer)));\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementIndicesBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, unitQuadElementIndices, gl.STATIC_DRAW);\n\n    // Setup attributes\n    this._attributesBuffer = throwIfFalsy(gl.createBuffer());\n    this.register(toDisposable(() => gl.deleteBuffer(this._attributesBuffer)));\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.enableVertexAttribArray(VertexAttribLocations.OFFSET);\n    gl.vertexAttribPointer(VertexAttribLocations.OFFSET, 2, gl.FLOAT, false, BYTES_PER_CELL, 0);\n    gl.vertexAttribDivisor(VertexAttribLocations.OFFSET, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.SIZE);\n    gl.vertexAttribPointer(VertexAttribLocations.SIZE, 2, gl.FLOAT, false, BYTES_PER_CELL, 2 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.SIZE, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.TEXPAGE);\n    gl.vertexAttribPointer(VertexAttribLocations.TEXPAGE, 1, gl.FLOAT, false, BYTES_PER_CELL, 4 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.TEXPAGE, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.TEXCOORD);\n    gl.vertexAttribPointer(VertexAttribLocations.TEXCOORD, 2, gl.FLOAT, false, BYTES_PER_CELL, 5 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.TEXCOORD, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.TEXSIZE);\n    gl.vertexAttribPointer(VertexAttribLocations.TEXSIZE, 2, gl.FLOAT, false, BYTES_PER_CELL, 7 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.TEXSIZE, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.CELL_POSITION);\n    gl.vertexAttribPointer(VertexAttribLocations.CELL_POSITION, 2, gl.FLOAT, false, BYTES_PER_CELL, 9 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.CELL_POSITION, 1);\n\n    // Setup static uniforms\n    gl.useProgram(this._program);\n    const textureUnits = new Int32Array(TextureAtlas.maxAtlasPages);\n    for (let i = 0; i < TextureAtlas.maxAtlasPages; i++) {\n      textureUnits[i] = i;\n    }\n    gl.uniform1iv(this._textureLocation, textureUnits);\n    gl.uniformMatrix4fv(this._projectionLocation, false, PROJECTION_MATRIX);\n\n    // Setup 1x1 red pixel textures for all potential atlas pages, if one of these invalid textures\n    // is ever drawn it will show characters as red rectangles.\n    this._atlasTextures = [];\n    for (let i = 0; i < TextureAtlas.maxAtlasPages; i++) {\n      const glTexture = new GLTexture(throwIfFalsy(gl.createTexture()));\n      this.register(toDisposable(() => gl.deleteTexture(glTexture.texture)));\n      gl.activeTexture(gl.TEXTURE0 + i);\n      gl.bindTexture(gl.TEXTURE_2D, glTexture.texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array([255, 0, 0, 255]));\n      this._atlasTextures[i] = glTexture;\n    }\n\n    // Allow drawing of transparent texture\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    // Set viewport\n    this.handleResize();\n  }\n\n  public beginFrame(): boolean {\n    return this._atlas ? this._atlas.beginFrame() : true;\n  }\n\n  public updateCell(x: number, y: number, code: number, bg: number, fg: number, ext: number, chars: string, width: number, lastBg: number): void {\n    // Since this function is called for every cell (`rows*cols`), it must be very optimized. It\n    // should not instantiate any variables unless a new glyph is drawn to the cache where the\n    // slight slowdown is acceptable for the developer ergonomics provided as it's a once of for\n    // each glyph.\n    this._updateCell(this._vertices.attributes, x, y, code, bg, fg, ext, chars, width, lastBg);\n  }\n\n  private _updateCell(array: Float32Array, x: number, y: number, code: number | undefined, bg: number, fg: number, ext: number, chars: string, width: number, lastBg: number): void {\n    $i = (y * this._terminal.cols + x) * INDICES_PER_CELL;\n\n    // Exit early if this is a null character, allow space character to continue as it may have\n    // underline/strikethrough styles\n    if (code === NULL_CELL_CODE || code === undefined/* This is used for the right side of wide chars */) {\n      array.fill(0, $i, $i + INDICES_PER_CELL - 1 - CELL_POSITION_INDICES);\n      return;\n    }\n\n    if (!this._atlas) {\n      return;\n    }\n\n    // Get the glyph\n    if (chars && chars.length > 1) {\n      $glyph = this._atlas.getRasterizedGlyphCombinedChar(chars, bg, fg, ext, false);\n    } else {\n      $glyph = this._atlas.getRasterizedGlyph(code, bg, fg, ext, false);\n    }\n\n    $leftCellPadding = Math.floor((this._dimensions.device.cell.width - this._dimensions.device.char.width) / 2);\n    if (bg !== lastBg && $glyph.offset.x > $leftCellPadding) {\n      $clippedPixels = $glyph.offset.x - $leftCellPadding;\n      // a_origin\n      array[$i    ] = -($glyph.offset.x - $clippedPixels) + this._dimensions.device.char.left;\n      array[$i + 1] = -$glyph.offset.y + this._dimensions.device.char.top;\n      // a_size\n      array[$i + 2] = ($glyph.size.x - $clippedPixels) / this._dimensions.device.canvas.width;\n      array[$i + 3] = $glyph.size.y / this._dimensions.device.canvas.height;\n      // a_texpage\n      array[$i + 4] = $glyph.texturePage;\n      // a_texcoord\n      array[$i + 5] = $glyph.texturePositionClipSpace.x + $clippedPixels / this._atlas.pages[$glyph.texturePage].canvas.width;\n      array[$i + 6] = $glyph.texturePositionClipSpace.y;\n      // a_texsize\n      array[$i + 7] = $glyph.sizeClipSpace.x - $clippedPixels / this._atlas.pages[$glyph.texturePage].canvas.width;\n      array[$i + 8] = $glyph.sizeClipSpace.y;\n    } else {\n      // a_origin\n      array[$i    ] = -$glyph.offset.x + this._dimensions.device.char.left;\n      array[$i + 1] = -$glyph.offset.y + this._dimensions.device.char.top;\n      // a_size\n      array[$i + 2] = $glyph.size.x / this._dimensions.device.canvas.width;\n      array[$i + 3] = $glyph.size.y / this._dimensions.device.canvas.height;\n      // a_texpage\n      array[$i + 4] = $glyph.texturePage;\n      // a_texcoord\n      array[$i + 5] = $glyph.texturePositionClipSpace.x;\n      array[$i + 6] = $glyph.texturePositionClipSpace.y;\n      // a_texsize\n      array[$i + 7] = $glyph.sizeClipSpace.x;\n      array[$i + 8] = $glyph.sizeClipSpace.y;\n    }\n    // a_cellpos only changes on resize\n\n    // Reduce scale horizontally for wide glyphs printed in cells that would overlap with the\n    // following cell (ie. the width is not 2).\n    if (this._optionsService.rawOptions.rescaleOverlappingGlyphs) {\n      if (allowRescaling(code, width, $glyph.size.x, this._dimensions.device.cell.width)) {\n        array[$i + 2] = (this._dimensions.device.cell.width - 1) / this._dimensions.device.canvas.width; // - 1 to improve readability\n      }\n    }\n  }\n\n  public clear(): void {\n    const terminal = this._terminal;\n    const newCount = terminal.cols * terminal.rows * INDICES_PER_CELL;\n\n    // Clear vertices\n    if (this._vertices.count !== newCount) {\n      this._vertices.attributes = new Float32Array(newCount);\n    } else {\n      this._vertices.attributes.fill(0);\n    }\n    let i = 0;\n    for (; i < this._vertices.attributesBuffers.length; i++) {\n      if (this._vertices.count !== newCount) {\n        this._vertices.attributesBuffers[i] = new Float32Array(newCount);\n      } else {\n        this._vertices.attributesBuffers[i].fill(0);\n      }\n    }\n    this._vertices.count = newCount;\n    i = 0;\n    for (let y = 0; y < terminal.rows; y++) {\n      for (let x = 0; x < terminal.cols; x++) {\n        this._vertices.attributes[i + 9] = x / terminal.cols;\n        this._vertices.attributes[i + 10] = y / terminal.rows;\n        i += INDICES_PER_CELL;\n      }\n    }\n  }\n\n  public handleResize(): void {\n    const gl = this._gl;\n    gl.useProgram(this._program);\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    gl.uniform2f(this._resolutionLocation, gl.canvas.width, gl.canvas.height);\n    this.clear();\n  }\n\n  public render(renderModel: IRenderModel): void {\n    if (!this._atlas) {\n      return;\n    }\n\n    const gl = this._gl;\n\n    gl.useProgram(this._program);\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    // Alternate buffers each frame as the active buffer gets locked while it's in use by the GPU\n    this._activeBuffer = (this._activeBuffer + 1) % 2;\n    const activeBuffer = this._vertices.attributesBuffers[this._activeBuffer];\n\n    // Copy data for each cell of each line up to its line length (the last non-whitespace cell)\n    // from the attributes buffer into activeBuffer, which is the one that gets bound to the GPU.\n    // The reasons for this are as follows:\n    // - So the active buffer can be alternated so we don't get blocked on rendering finishing\n    // - To copy either the normal attributes buffer or the selection attributes buffer when there\n    //   is a selection\n    // - So we don't send vertices for all the line-ending whitespace to the GPU\n    let bufferLength = 0;\n    for (let y = 0; y < renderModel.lineLengths.length; y++) {\n      const si = y * this._terminal.cols * INDICES_PER_CELL;\n      const sub = this._vertices.attributes.subarray(si, si + renderModel.lineLengths[y] * INDICES_PER_CELL);\n      activeBuffer.set(sub, bufferLength);\n      bufferLength += sub.length;\n    }\n\n    // Bind the attributes buffer\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, activeBuffer.subarray(0, bufferLength), gl.STREAM_DRAW);\n\n    // Bind the atlas page texture if they have changed\n    for (let i = 0; i < this._atlas.pages.length; i++) {\n      if (this._atlas.pages[i].version !== this._atlasTextures[i].version) {\n        this._bindAtlasPageTexture(gl, this._atlas, i);\n      }\n    }\n\n    // Draw the viewport\n    gl.drawElementsInstanced(gl.TRIANGLE_STRIP, 4, gl.UNSIGNED_BYTE, 0, bufferLength / INDICES_PER_CELL);\n  }\n\n  public setAtlas(atlas: ITextureAtlas): void {\n    this._atlas = atlas;\n    for (const glTexture of this._atlasTextures) {\n      glTexture.version = -1;\n    }\n  }\n\n  private _bindAtlasPageTexture(gl: IWebGL2RenderingContext, atlas: ITextureAtlas, i: number): void {\n    gl.activeTexture(gl.TEXTURE0 + i);\n    gl.bindTexture(gl.TEXTURE_2D, this._atlasTextures[i].texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, atlas.pages[i].canvas);\n    gl.generateMipmap(gl.TEXTURE_2D);\n    this._atlasTextures[i].version = atlas.pages[i].version;\n  }\n\n  public setDimensions(dimensions: IRenderDimensions): void {\n    this._dimensions = dimensions;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { throwIfFalsy } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { IThemeService } from 'browser/services/Services';\nimport { ReadonlyColorSet } from 'browser/Types';\nimport { Attributes, FgFlags } from 'common/buffer/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IColor } from 'common/Types';\nimport { Terminal } from '@xterm/xterm';\nimport { RENDER_MODEL_BG_OFFSET, RENDER_MODEL_FG_OFFSET, RENDER_MODEL_INDICIES_PER_CELL } from './RenderModel';\nimport { IRenderModel, IWebGL2RenderingContext, IWebGLVertexArrayObject } from './Types';\nimport { createProgram, expandFloat32Array, PROJECTION_MATRIX } from './WebglUtils';\n\nconst enum VertexAttribLocations {\n  POSITION = 0,\n  SIZE = 1,\n  COLOR = 2,\n  UNIT_QUAD = 3\n}\n\nconst vertexShaderSource = `#version 300 es\nlayout (location = ${VertexAttribLocations.POSITION}) in vec2 a_position;\nlayout (location = ${VertexAttribLocations.SIZE}) in vec2 a_size;\nlayout (location = ${VertexAttribLocations.COLOR}) in vec4 a_color;\nlayout (location = ${VertexAttribLocations.UNIT_QUAD}) in vec2 a_unitquad;\n\nuniform mat4 u_projection;\n\nout vec4 v_color;\n\nvoid main() {\n  vec2 zeroToOne = a_position + (a_unitquad * a_size);\n  gl_Position = u_projection * vec4(zeroToOne, 0.0, 1.0);\n  v_color = a_color;\n}`;\n\nconst fragmentShaderSource = `#version 300 es\nprecision lowp float;\n\nin vec4 v_color;\n\nout vec4 outColor;\n\nvoid main() {\n  outColor = v_color;\n}`;\n\nconst INDICES_PER_RECTANGLE = 8;\nconst BYTES_PER_RECTANGLE = INDICES_PER_RECTANGLE * Float32Array.BYTES_PER_ELEMENT;\n\nconst INITIAL_BUFFER_RECTANGLE_CAPACITY = 20 * INDICES_PER_RECTANGLE;\n\nclass Vertices {\n  public attributes: Float32Array;\n  public count: number;\n\n  constructor() {\n    this.attributes = new Float32Array(INITIAL_BUFFER_RECTANGLE_CAPACITY);\n    this.count = 0;\n  }\n}\n\n// Work variables to avoid garbage collection\nlet $rgba = 0;\nlet $x1 = 0;\nlet $y1 = 0;\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport class RectangleRenderer extends Disposable {\n\n  private _program: WebGLProgram;\n  private _vertexArrayObject: IWebGLVertexArrayObject;\n  private _attributesBuffer: WebGLBuffer;\n  private _projectionLocation: WebGLUniformLocation;\n  private _bgFloat!: Float32Array;\n  private _cursorFloat!: Float32Array;\n\n  private _vertices: Vertices = new Vertices();\n  private _verticesCursor: Vertices = new Vertices();\n\n  constructor(\n    private _terminal: Terminal,\n    private _gl: IWebGL2RenderingContext,\n    private _dimensions: IRenderDimensions,\n    private readonly _themeService: IThemeService\n  ) {\n    super();\n\n    const gl = this._gl;\n\n    this._program = throwIfFalsy(createProgram(gl, vertexShaderSource, fragmentShaderSource));\n    this.register(toDisposable(() => gl.deleteProgram(this._program)));\n\n    // Uniform locations\n    this._projectionLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_projection'));\n\n    // Create and set the vertex array object\n    this._vertexArrayObject = gl.createVertexArray();\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    // Setup a_unitquad, this defines the 4 vertices of a rectangle\n    const unitQuadVertices = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const unitQuadVerticesBuffer = gl.createBuffer();\n    this.register(toDisposable(() => gl.deleteBuffer(unitQuadVerticesBuffer)));\n    gl.bindBuffer(gl.ARRAY_BUFFER, unitQuadVerticesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, unitQuadVertices, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(VertexAttribLocations.UNIT_QUAD);\n    gl.vertexAttribPointer(VertexAttribLocations.UNIT_QUAD, 2, this._gl.FLOAT, false, 0, 0);\n\n    // Setup the unit quad element array buffer, this points to indices in\n    // unitQuadVertices to allow is to draw 2 triangles from the vertices via a\n    // triangle strip\n    const unitQuadElementIndices = new Uint8Array([0, 1, 2, 3]);\n    const elementIndicesBuffer = gl.createBuffer();\n    this.register(toDisposable(() => gl.deleteBuffer(elementIndicesBuffer)));\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementIndicesBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, unitQuadElementIndices, gl.STATIC_DRAW);\n\n    // Setup attributes\n    this._attributesBuffer = throwIfFalsy(gl.createBuffer());\n    this.register(toDisposable(() => gl.deleteBuffer(this._attributesBuffer)));\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.enableVertexAttribArray(VertexAttribLocations.POSITION);\n    gl.vertexAttribPointer(VertexAttribLocations.POSITION, 2, gl.FLOAT, false, BYTES_PER_RECTANGLE, 0);\n    gl.vertexAttribDivisor(VertexAttribLocations.POSITION, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.SIZE);\n    gl.vertexAttribPointer(VertexAttribLocations.SIZE, 2, gl.FLOAT, false, BYTES_PER_RECTANGLE, 2 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.SIZE, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.COLOR);\n    gl.vertexAttribPointer(VertexAttribLocations.COLOR, 4, gl.FLOAT, false, BYTES_PER_RECTANGLE, 4 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.COLOR, 1);\n\n    this._updateCachedColors(_themeService.colors);\n    this.register(this._themeService.onChangeColors(e => {\n      this._updateCachedColors(e);\n      this._updateViewportRectangle();\n    }));\n  }\n\n  public renderBackgrounds(): void {\n    this._renderVertices(this._vertices);\n  }\n\n  public renderCursor(): void {\n    this._renderVertices(this._verticesCursor);\n  }\n\n  private _renderVertices(vertices: Vertices): void {\n    const gl = this._gl;\n\n    gl.useProgram(this._program);\n\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    gl.uniformMatrix4fv(this._projectionLocation, false, PROJECTION_MATRIX);\n\n    // Bind attributes buffer and draw\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, vertices.attributes, gl.DYNAMIC_DRAW);\n    gl.drawElementsInstanced(this._gl.TRIANGLE_STRIP, 4, gl.UNSIGNED_BYTE, 0, vertices.count);\n  }\n\n  public handleResize(): void {\n    this._updateViewportRectangle();\n  }\n\n  public setDimensions(dimensions: IRenderDimensions): void {\n    this._dimensions = dimensions;\n  }\n\n  private _updateCachedColors(colors: ReadonlyColorSet): void {\n    this._bgFloat = this._colorToFloat32Array(colors.background);\n    this._cursorFloat = this._colorToFloat32Array(colors.cursor);\n  }\n\n  private _updateViewportRectangle(): void {\n    // Set first rectangle that clears the screen\n    this._addRectangleFloat(\n      this._vertices.attributes,\n      0,\n      0,\n      0,\n      this._terminal.cols * this._dimensions.device.cell.width,\n      this._terminal.rows * this._dimensions.device.cell.height,\n      this._bgFloat\n    );\n  }\n\n  public updateBackgrounds(model: IRenderModel): void {\n    const terminal = this._terminal;\n    const vertices = this._vertices;\n\n    // Declare variable ahead of time to avoid garbage collection\n    let rectangleCount = 1;\n    let y: number;\n    let x: number;\n    let currentStartX: number;\n    let currentBg: number;\n    let currentFg: number;\n    let currentInverse: boolean;\n    let modelIndex: number;\n    let bg: number;\n    let fg: number;\n    let inverse: boolean;\n    let offset: number;\n\n    for (y = 0; y < terminal.rows; y++) {\n      currentStartX = -1;\n      currentBg = 0;\n      currentFg = 0;\n      currentInverse = false;\n      for (x = 0; x < terminal.cols; x++) {\n        modelIndex = ((y * terminal.cols) + x) * RENDER_MODEL_INDICIES_PER_CELL;\n        bg = model.cells[modelIndex + RENDER_MODEL_BG_OFFSET];\n        fg = model.cells[modelIndex + RENDER_MODEL_FG_OFFSET];\n        inverse = !!(fg & FgFlags.INVERSE);\n        if (bg !== currentBg || (fg !== currentFg && (currentInverse || inverse))) {\n          // A rectangle needs to be drawn if going from non-default to another color\n          if (currentBg !== 0 || (currentInverse && currentFg !== 0)) {\n            offset = rectangleCount++ * INDICES_PER_RECTANGLE;\n            this._updateRectangle(vertices, offset, currentFg, currentBg, currentStartX, x, y);\n          }\n          currentStartX = x;\n          currentBg = bg;\n          currentFg = fg;\n          currentInverse = inverse;\n        }\n      }\n      // Finish rectangle if it's still going\n      if (currentBg !== 0 || (currentInverse && currentFg !== 0)) {\n        offset = rectangleCount++ * INDICES_PER_RECTANGLE;\n        this._updateRectangle(vertices, offset, currentFg, currentBg, currentStartX, terminal.cols, y);\n      }\n    }\n    vertices.count = rectangleCount;\n  }\n\n  public updateCursor(model: IRenderModel): void {\n    const vertices = this._verticesCursor;\n    const cursor = model.cursor;\n    if (!cursor || cursor.style === 'block') {\n      vertices.count = 0;\n      return;\n    }\n\n    let offset: number;\n    let rectangleCount = 0;\n\n    if (cursor.style === 'bar' || cursor.style === 'outline') {\n      // Left edge\n      offset = rectangleCount++ * INDICES_PER_RECTANGLE;\n      this._addRectangleFloat(\n        vertices.attributes,\n        offset,\n        cursor.x * this._dimensions.device.cell.width,\n        cursor.y * this._dimensions.device.cell.height,\n        cursor.style === 'bar' ? cursor.dpr * cursor.cursorWidth : cursor.dpr,\n        this._dimensions.device.cell.height,\n        this._cursorFloat\n      );\n    }\n    if (cursor.style === 'underline' || cursor.style === 'outline') {\n      // Bottom edge\n      offset = rectangleCount++ * INDICES_PER_RECTANGLE;\n      this._addRectangleFloat(\n        vertices.attributes,\n        offset,\n        cursor.x * this._dimensions.device.cell.width,\n        (cursor.y + 1) * this._dimensions.device.cell.height - cursor.dpr,\n        cursor.width * this._dimensions.device.cell.width,\n        cursor.dpr,\n        this._cursorFloat\n      );\n    }\n    if (cursor.style === 'outline') {\n      // Top edge\n      offset = rectangleCount++ * INDICES_PER_RECTANGLE;\n      this._addRectangleFloat(\n        vertices.attributes,\n        offset,\n        cursor.x * this._dimensions.device.cell.width,\n        cursor.y * this._dimensions.device.cell.height,\n        cursor.width * this._dimensions.device.cell.width,\n        cursor.dpr,\n        this._cursorFloat\n      );\n      // Right edge\n      offset = rectangleCount++ * INDICES_PER_RECTANGLE;\n      this._addRectangleFloat(\n        vertices.attributes,\n        offset,\n        (cursor.x + cursor.width) * this._dimensions.device.cell.width - cursor.dpr,\n        cursor.y * this._dimensions.device.cell.height,\n        cursor.dpr,\n        this._dimensions.device.cell.height,\n        this._cursorFloat\n      );\n    }\n\n    vertices.count = rectangleCount;\n  }\n\n  private _updateRectangle(vertices: Vertices, offset: number, fg: number, bg: number, startX: number, endX: number, y: number): void {\n    if (fg & FgFlags.INVERSE) {\n      switch (fg & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          $rgba = this._themeService.colors.ansi[fg & Attributes.PCOLOR_MASK].rgba;\n          break;\n        case Attributes.CM_RGB:\n          $rgba = (fg & Attributes.RGB_MASK) << 8;\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          $rgba = this._themeService.colors.foreground.rgba;\n      }\n    } else {\n      switch (bg & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          $rgba = this._themeService.colors.ansi[bg & Attributes.PCOLOR_MASK].rgba;\n          break;\n        case Attributes.CM_RGB:\n          $rgba = (bg & Attributes.RGB_MASK) << 8;\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          $rgba = this._themeService.colors.background.rgba;\n      }\n    }\n\n    if (vertices.attributes.length < offset + 4) {\n      vertices.attributes = expandFloat32Array(vertices.attributes, this._terminal.rows * this._terminal.cols * INDICES_PER_RECTANGLE);\n    }\n    $x1 = startX * this._dimensions.device.cell.width;\n    $y1 = y * this._dimensions.device.cell.height;\n    $r = (($rgba >> 24) & 0xFF) / 255;\n    $g = (($rgba >> 16) & 0xFF) / 255;\n    $b = (($rgba >> 8 ) & 0xFF) / 255;\n    $a = 1;\n\n    this._addRectangle(vertices.attributes, offset, $x1, $y1, (endX - startX) * this._dimensions.device.cell.width, this._dimensions.device.cell.height, $r, $g, $b, $a);\n  }\n\n  private _addRectangle(array: Float32Array, offset: number, x1: number, y1: number, width: number, height: number, r: number, g: number, b: number, a: number): void {\n    array[offset    ] = x1 / this._dimensions.device.canvas.width;\n    array[offset + 1] = y1 / this._dimensions.device.canvas.height;\n    array[offset + 2] = width / this._dimensions.device.canvas.width;\n    array[offset + 3] = height / this._dimensions.device.canvas.height;\n    array[offset + 4] = r;\n    array[offset + 5] = g;\n    array[offset + 6] = b;\n    array[offset + 7] = a;\n  }\n\n  private _addRectangleFloat(array: Float32Array, offset: number, x1: number, y1: number, width: number, height: number, color: Float32Array): void {\n    array[offset    ] = x1 / this._dimensions.device.canvas.width;\n    array[offset + 1] = y1 / this._dimensions.device.canvas.height;\n    array[offset + 2] = width / this._dimensions.device.canvas.width;\n    array[offset + 3] = height / this._dimensions.device.canvas.height;\n    array[offset + 4] = color[0];\n    array[offset + 5] = color[1];\n    array[offset + 6] = color[2];\n    array[offset + 7] = color[3];\n  }\n\n  private _colorToFloat32Array(color: IColor): Float32Array {\n    return new Float32Array([\n      ((color.rgba >> 24) & 0xFF) / 255,\n      ((color.rgba >> 16) & 0xFF) / 255,\n      ((color.rgba >> 8 ) & 0xFF) / 255,\n      ((color.rgba      ) & 0xFF) / 255\n    ]);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICursorRenderModel, IRenderModel } from './Types';\nimport { ISelectionRenderModel } from 'browser/renderer/shared/Types';\nimport { createSelectionRenderModel } from 'browser/renderer/shared/SelectionRenderModel';\n\nexport const RENDER_MODEL_INDICIES_PER_CELL = 4;\nexport const RENDER_MODEL_BG_OFFSET = 1;\nexport const RENDER_MODEL_FG_OFFSET = 2;\nexport const RENDER_MODEL_EXT_OFFSET = 3;\n\nexport const COMBINED_CHAR_BIT_MASK = 0x80000000;\n\nexport class RenderModel implements IRenderModel {\n  public cells: Uint32Array;\n  public lineLengths: Uint32Array;\n  public selection: ISelectionRenderModel;\n  public cursor?: ICursorRenderModel;\n\n  constructor() {\n    this.cells = new Uint32Array(0);\n    this.lineLengths = new Uint32Array(0);\n    this.selection = createSelectionRenderModel();\n  }\n\n  public resize(cols: number, rows: number): void {\n    const indexCount = cols * rows * RENDER_MODEL_INDICIES_PER_CELL;\n    if (indexCount !== this.cells.length) {\n      this.cells = new Uint32Array(indexCount);\n      this.lineLengths = new Uint32Array(rows);\n    }\n  }\n\n  public clear(): void {\n    this.cells.fill(0, 0);\n    this.lineLengths.fill(0, 0);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { ITerminal } from 'browser/Types';\nimport { CellColorResolver } from 'browser/renderer/shared/CellColorResolver';\nimport { acquireTextureAtlas, removeTerminalFromCache } from 'browser/renderer/shared/CharAtlasCache';\nimport { CursorBlinkStateManager } from 'browser/renderer/shared/CursorBlinkStateManager';\nimport { observeDevicePixelDimensions } from 'browser/renderer/shared/DevicePixelObserver';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent, ITextureAtlas } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter, forwardEvent } from 'common/EventEmitter';\nimport { Disposable, MutableDisposable, getDisposeArrayDisposable, toDisposable } from 'common/Lifecycle';\nimport { CharData, IBufferLine, ICellData } from 'common/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { CellData } from 'common/buffer/CellData';\nimport { Attributes, Content, NULL_CELL_CHAR, NULL_CELL_CODE } from 'common/buffer/Constants';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { Terminal } from '@xterm/xterm';\nimport { GlyphRenderer } from './GlyphRenderer';\nimport { RectangleRenderer } from './RectangleRenderer';\nimport { COMBINED_CHAR_BIT_MASK, RENDER_MODEL_BG_OFFSET, RENDER_MODEL_EXT_OFFSET, RENDER_MODEL_FG_OFFSET, RENDER_MODEL_INDICIES_PER_CELL, RenderModel } from './RenderModel';\nimport { IWebGL2RenderingContext } from './Types';\nimport { LinkRenderLayer } from './renderLayer/LinkRenderLayer';\nimport { IRenderLayer } from './renderLayer/Types';\n\nexport class WebglRenderer extends Disposable implements IRenderer {\n  private _renderLayers: IRenderLayer[];\n  private _cursorBlinkStateManager: MutableDisposable<CursorBlinkStateManager> = new MutableDisposable();\n  private _charAtlasDisposable = this.register(new MutableDisposable());\n  private _charAtlas: ITextureAtlas | undefined;\n  private _devicePixelRatio: number;\n  private _observerDisposable = this.register(new MutableDisposable());\n\n  private _model: RenderModel = new RenderModel();\n  private _workCell: ICellData = new CellData();\n  private _workCell2: ICellData = new CellData();\n  private _cellColorResolver: CellColorResolver;\n\n  private _canvas: HTMLCanvasElement;\n  private _gl: IWebGL2RenderingContext;\n  private _rectangleRenderer: MutableDisposable<RectangleRenderer> = this.register(new MutableDisposable());\n  private _glyphRenderer: MutableDisposable<GlyphRenderer> = this.register(new MutableDisposable());\n\n  public readonly dimensions: IRenderDimensions;\n\n  private _core: ITerminal;\n  private _isAttached: boolean;\n  private _contextRestorationTimeout: number | undefined;\n\n  private readonly _onChangeTextureAtlas = this.register(new EventEmitter<HTMLCanvasElement>());\n  public readonly onChangeTextureAtlas = this._onChangeTextureAtlas.event;\n  private readonly _onAddTextureAtlasCanvas = this.register(new EventEmitter<HTMLCanvasElement>());\n  public readonly onAddTextureAtlasCanvas = this._onAddTextureAtlasCanvas.event;\n  private readonly _onRemoveTextureAtlasCanvas = this.register(new EventEmitter<HTMLCanvasElement>());\n  public readonly onRemoveTextureAtlasCanvas = this._onRemoveTextureAtlasCanvas.event;\n  private readonly _onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>());\n  public readonly onRequestRedraw = this._onRequestRedraw.event;\n  private readonly _onContextLoss = this.register(new EventEmitter<void>());\n  public readonly onContextLoss = this._onContextLoss.event;\n\n  constructor(\n    private _terminal: Terminal,\n    private readonly _characterJoinerService: ICharacterJoinerService,\n    private readonly _charSizeService: ICharSizeService,\n    private readonly _coreBrowserService: ICoreBrowserService,\n    private readonly _coreService: ICoreService,\n    private readonly _decorationService: IDecorationService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _themeService: IThemeService,\n    preserveDrawingBuffer?: boolean\n  ) {\n    super();\n\n    this.register(this._themeService.onChangeColors(() => this._handleColorChange()));\n\n    this._cellColorResolver = new CellColorResolver(this._terminal, this._optionsService, this._model.selection, this._decorationService, this._coreBrowserService, this._themeService);\n\n    this._core = (this._terminal as any)._core;\n\n    this._renderLayers = [\n      new LinkRenderLayer(this._core.screenElement!, 2, this._terminal, this._core.linkifier!, this._coreBrowserService, _optionsService, this._themeService)\n    ];\n    this.dimensions = createRenderDimensions();\n    this._devicePixelRatio = this._coreBrowserService.dpr;\n    this._updateDimensions();\n    this._updateCursorBlink();\n    this.register(_optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this._canvas = this._coreBrowserService.mainDocument.createElement('canvas');\n\n    const contextAttributes = {\n      antialias: false,\n      depth: false,\n      preserveDrawingBuffer\n    };\n    this._gl = this._canvas.getContext('webgl2', contextAttributes) as IWebGL2RenderingContext;\n    if (!this._gl) {\n      throw new Error('WebGL2 not supported ' + this._gl);\n    }\n\n    this.register(addDisposableDomListener(this._canvas, 'webglcontextlost', (e) => {\n      console.log('webglcontextlost event received');\n      // Prevent the default behavior in order to enable WebGL context restoration.\n      e.preventDefault();\n      // Wait a few seconds to see if the 'webglcontextrestored' event is fired.\n      // If not, dispatch the onContextLoss notification to observers.\n      this._contextRestorationTimeout = setTimeout(() => {\n        this._contextRestorationTimeout = undefined;\n        console.warn('webgl context not restored; firing onContextLoss');\n        this._onContextLoss.fire(e);\n      }, 3000 /* ms */);\n    }));\n    this.register(addDisposableDomListener(this._canvas, 'webglcontextrestored', (e) => {\n      console.warn('webglcontextrestored event received');\n      clearTimeout(this._contextRestorationTimeout);\n      this._contextRestorationTimeout = undefined;\n      // The texture atlas and glyph renderer must be fully reinitialized\n      // because their contents have been lost.\n      removeTerminalFromCache(this._terminal);\n      this._initializeWebGLState();\n      this._requestRedrawViewport();\n    }));\n\n    this._observerDisposable.value = observeDevicePixelDimensions(this._canvas, this._coreBrowserService.window, (w, h) => this._setCanvasDevicePixelDimensions(w, h));\n    this.register(this._coreBrowserService.onWindowChange(w => {\n      this._observerDisposable.value = observeDevicePixelDimensions(this._canvas, w, (w, h) => this._setCanvasDevicePixelDimensions(w, h));\n    }));\n\n    this._core.screenElement!.appendChild(this._canvas);\n\n    [this._rectangleRenderer.value, this._glyphRenderer.value] = this._initializeWebGLState();\n\n    this._isAttached = this._coreBrowserService.window.document.body.contains(this._core.screenElement!);\n\n    this.register(toDisposable(() => {\n      for (const l of this._renderLayers) {\n        l.dispose();\n      }\n      this._canvas.parentElement?.removeChild(this._canvas);\n      removeTerminalFromCache(this._terminal);\n    }));\n  }\n\n  public get textureAtlas(): HTMLCanvasElement | undefined {\n    return this._charAtlas?.pages[0].canvas;\n  }\n\n  private _handleColorChange(): void {\n    this._refreshCharAtlas();\n\n    // Force a full refresh\n    this._clearModel(true);\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== this._coreBrowserService.dpr) {\n      this._devicePixelRatio = this._coreBrowserService.dpr;\n      this.handleResize(this._terminal.cols, this._terminal.rows);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    this._model.resize(this._terminal.cols, this._terminal.rows);\n\n    // Resize all render layers\n    for (const l of this._renderLayers) {\n      l.resize(this._terminal, this.dimensions);\n    }\n\n    // Resize the canvas\n    this._canvas.width = this.dimensions.device.canvas.width;\n    this._canvas.height = this.dimensions.device.canvas.height;\n    this._canvas.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._canvas.style.height = `${this.dimensions.css.canvas.height}px`;\n\n    // Resize the screen\n    this._core.screenElement!.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._core.screenElement!.style.height = `${this.dimensions.css.canvas.height}px`;\n\n    this._rectangleRenderer.value?.setDimensions(this.dimensions);\n    this._rectangleRenderer.value?.handleResize();\n    this._glyphRenderer.value?.setDimensions(this.dimensions);\n    this._glyphRenderer.value?.handleResize();\n\n    this._refreshCharAtlas();\n\n    // Force a full refresh. Resizing `_glyphRenderer` should clear it already,\n    // so there is no need to clear it again here.\n    this._clearModel(false);\n  }\n\n  public handleCharSizeChanged(): void {\n    this.handleResize(this._terminal.cols, this._terminal.rows);\n  }\n\n  public handleBlur(): void {\n    for (const l of this._renderLayers) {\n      l.handleBlur(this._terminal);\n    }\n    this._cursorBlinkStateManager.value?.pause();\n    // Request a redraw for active/inactive selection background\n    this._requestRedrawViewport();\n  }\n\n  public handleFocus(): void {\n    for (const l of this._renderLayers) {\n      l.handleFocus(this._terminal);\n    }\n    this._cursorBlinkStateManager.value?.resume();\n    // Request a redraw for active/inactive selection background\n    this._requestRedrawViewport();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    for (const l of this._renderLayers) {\n      l.handleSelectionChanged(this._terminal, start, end, columnSelectMode);\n    }\n    this._model.selection.update(this._core, start, end, columnSelectMode);\n    this._requestRedrawViewport();\n  }\n\n  public handleCursorMove(): void {\n    for (const l of this._renderLayers) {\n      l.handleCursorMove(this._terminal);\n    }\n    this._cursorBlinkStateManager.value?.restartBlinkAnimation();\n  }\n\n  private _handleOptionsChanged(): void {\n    this._updateDimensions();\n    this._refreshCharAtlas();\n    this._updateCursorBlink();\n  }\n\n  /**\n   * Initializes members dependent on WebGL context state.\n   */\n  private _initializeWebGLState(): [RectangleRenderer, GlyphRenderer] {\n    this._rectangleRenderer.value = new RectangleRenderer(this._terminal, this._gl, this.dimensions, this._themeService);\n    this._glyphRenderer.value = new GlyphRenderer(this._terminal, this._gl, this.dimensions, this._optionsService);\n\n    // Update dimensions and acquire char atlas\n    this.handleCharSizeChanged();\n\n    return [this._rectangleRenderer.value, this._glyphRenderer.value];\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   */\n  private _refreshCharAtlas(): void {\n    if (this.dimensions.device.char.width <= 0 && this.dimensions.device.char.height <= 0) {\n      // Mark as not attached so char atlas gets refreshed on next render\n      this._isAttached = false;\n      return;\n    }\n\n    const atlas = acquireTextureAtlas(\n      this._terminal,\n      this._optionsService.rawOptions,\n      this._themeService.colors,\n      this.dimensions.device.cell.width,\n      this.dimensions.device.cell.height,\n      this.dimensions.device.char.width,\n      this.dimensions.device.char.height,\n      this._coreBrowserService.dpr\n    );\n    if (this._charAtlas !== atlas) {\n      this._onChangeTextureAtlas.fire(atlas.pages[0].canvas);\n      this._charAtlasDisposable.value = getDisposeArrayDisposable([\n        forwardEvent(atlas.onAddTextureAtlasCanvas, this._onAddTextureAtlasCanvas),\n        forwardEvent(atlas.onRemoveTextureAtlasCanvas, this._onRemoveTextureAtlasCanvas)\n      ]);\n    }\n    this._charAtlas = atlas;\n    this._charAtlas.warmUp();\n    this._glyphRenderer.value?.setAtlas(this._charAtlas);\n  }\n\n  /**\n   * Clear the model.\n   * @param clearGlyphRenderer Whether to also clear the glyph renderer. This\n   * should be true generally to make sure it is in the same state as the model.\n   */\n  private _clearModel(clearGlyphRenderer: boolean): void {\n    this._model.clear();\n    if (clearGlyphRenderer) {\n      this._glyphRenderer.value?.clear();\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    this._charAtlas?.clearTexture();\n    this._clearModel(true);\n    this._requestRedrawViewport();\n  }\n\n  public clear(): void {\n    this._clearModel(true);\n    for (const l of this._renderLayers) {\n      l.reset(this._terminal);\n    }\n\n    this._cursorBlinkStateManager.value?.restartBlinkAnimation();\n    this._updateCursorBlink();\n  }\n\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    return -1;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return false;\n  }\n\n  public renderRows(start: number, end: number): void {\n    if (!this._isAttached) {\n      if (this._coreBrowserService.window.document.body.contains(this._core.screenElement!) && this._charSizeService.width && this._charSizeService.height) {\n        this._updateDimensions();\n        this._refreshCharAtlas();\n        this._isAttached = true;\n      } else {\n        return;\n      }\n    }\n\n    // Update render layers\n    for (const l of this._renderLayers) {\n      l.handleGridChanged(this._terminal, start, end);\n    }\n\n    if (!this._glyphRenderer.value || !this._rectangleRenderer.value) {\n      return;\n    }\n\n    // Tell renderer the frame is beginning\n    // upon a model clear also refresh the full viewport model\n    // (also triggered by an atlas page merge, part of #4480)\n    if (this._glyphRenderer.value.beginFrame()) {\n      this._clearModel(true);\n      this._updateModel(0, this._terminal.rows - 1);\n    } else {\n      // just update changed lines to draw\n      this._updateModel(start, end);\n    }\n\n    // Render\n    this._rectangleRenderer.value.renderBackgrounds();\n    this._glyphRenderer.value.render(this._model);\n    if (!this._cursorBlinkStateManager.value || this._cursorBlinkStateManager.value.isCursorVisible) {\n      this._rectangleRenderer.value.renderCursor();\n    }\n  }\n\n  private _updateCursorBlink(): void {\n    if (this._terminal.options.cursorBlink) {\n      this._cursorBlinkStateManager.value = new CursorBlinkStateManager(() => {\n        this._requestRedrawCursor();\n      }, this._coreBrowserService);\n    } else {\n      this._cursorBlinkStateManager.clear();\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._requestRedrawCursor();\n  }\n\n  private _updateModel(start: number, end: number): void {\n    const terminal = this._core;\n    let cell: ICellData = this._workCell;\n\n    // Declare variable ahead of time to avoid garbage collection\n    let lastBg: number;\n    let y: number;\n    let row: number;\n    let line: IBufferLine;\n    let joinedRanges: [number, number][];\n    let isJoined: boolean;\n    let lastCharX: number;\n    let range: [number, number];\n    let chars: string;\n    let code: number;\n    let width: number;\n    let i: number;\n    let x: number;\n    let j: number;\n    start = clamp(start, terminal.rows - 1, 0);\n    end = clamp(end, terminal.rows - 1, 0);\n\n    const cursorY = this._terminal.buffer.active.baseY + this._terminal.buffer.active.cursorY;\n    const viewportRelativeCursorY = cursorY - terminal.buffer.ydisp;\n    // in case cursor.x == cols adjust visual cursor to cols - 1\n    const cursorX = Math.min(this._terminal.buffer.active.cursorX, terminal.cols - 1);\n    let lastCursorX = -1;\n    const isCursorVisible =\n      this._coreService.isCursorInitialized &&\n      !this._coreService.isCursorHidden &&\n      (!this._cursorBlinkStateManager.value || this._cursorBlinkStateManager.value.isCursorVisible);\n    this._model.cursor = undefined;\n    let modelUpdated = false;\n\n    for (y = start; y <= end; y++) {\n      row = y + terminal.buffer.ydisp;\n      line = terminal.buffer.lines.get(row)!;\n      this._model.lineLengths[y] = 0;\n      joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n      for (x = 0; x < terminal.cols; x++) {\n        lastBg = this._cellColorResolver.result.bg;\n        line.loadCell(x, cell);\n\n        if (x === 0) {\n          lastBg = this._cellColorResolver.result.bg;\n        }\n\n        // If true, indicates that the current character(s) to draw were joined.\n        isJoined = false;\n        lastCharX = x;\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly.\n          cell = new JoinedCellData(\n            cell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        chars = cell.getChars();\n        code = cell.getCode();\n        i = ((y * terminal.cols) + x) * RENDER_MODEL_INDICIES_PER_CELL;\n\n        // Load colors/resolve overrides into work colors\n        this._cellColorResolver.resolve(cell, x, row, this.dimensions.device.cell.width);\n\n        // Override colors for cursor cell\n        if (isCursorVisible && row === cursorY) {\n          if (x === cursorX) {\n            this._model.cursor = {\n              x: cursorX,\n              y: viewportRelativeCursorY,\n              width: cell.getWidth(),\n              style: this._coreBrowserService.isFocused ?\n                (terminal.options.cursorStyle || 'block') : terminal.options.cursorInactiveStyle,\n              cursorWidth: terminal.options.cursorWidth,\n              dpr: this._devicePixelRatio\n            };\n            lastCursorX = cursorX + cell.getWidth() - 1;\n          }\n          if (x >= cursorX && x <= lastCursorX &&\n              ((this._coreBrowserService.isFocused &&\n              (terminal.options.cursorStyle || 'block') === 'block') ||\n              (this._coreBrowserService.isFocused === false &&\n              terminal.options.cursorInactiveStyle === 'block'))) {\n            this._cellColorResolver.result.fg =\n              Attributes.CM_RGB | (this._themeService.colors.cursorAccent.rgba >> 8 & Attributes.RGB_MASK);\n            this._cellColorResolver.result.bg =\n              Attributes.CM_RGB | (this._themeService.colors.cursor.rgba >> 8 & Attributes.RGB_MASK);\n          }\n        }\n\n        if (code !== NULL_CELL_CODE) {\n          this._model.lineLengths[y] = x + 1;\n        }\n\n        // Nothing has changed, no updates needed\n        if (this._model.cells[i] === code &&\n            this._model.cells[i + RENDER_MODEL_BG_OFFSET] === this._cellColorResolver.result.bg &&\n            this._model.cells[i + RENDER_MODEL_FG_OFFSET] === this._cellColorResolver.result.fg &&\n            this._model.cells[i + RENDER_MODEL_EXT_OFFSET] === this._cellColorResolver.result.ext) {\n          continue;\n        }\n\n        modelUpdated = true;\n\n        // Flag combined chars with a bit mask so they're easily identifiable\n        if (chars.length > 1) {\n          code |= COMBINED_CHAR_BIT_MASK;\n        }\n\n        // Cache the results in the model\n        this._model.cells[i] = code;\n        this._model.cells[i + RENDER_MODEL_BG_OFFSET] = this._cellColorResolver.result.bg;\n        this._model.cells[i + RENDER_MODEL_FG_OFFSET] = this._cellColorResolver.result.fg;\n        this._model.cells[i + RENDER_MODEL_EXT_OFFSET] = this._cellColorResolver.result.ext;\n\n        width = cell.getWidth();\n        this._glyphRenderer.value!.updateCell(x, y, code, this._cellColorResolver.result.bg, this._cellColorResolver.result.fg, this._cellColorResolver.result.ext, chars, width, lastBg);\n\n        if (isJoined) {\n          // Restore work cell\n          cell = this._workCell;\n\n          // Null out non-first cells\n          for (x++; x < lastCharX; x++) {\n            j = ((y * terminal.cols) + x) * RENDER_MODEL_INDICIES_PER_CELL;\n            this._glyphRenderer.value!.updateCell(x, y, NULL_CELL_CODE, 0, 0, 0, NULL_CELL_CHAR, 0, 0);\n            this._model.cells[j] = NULL_CELL_CODE;\n            this._model.cells[j + RENDER_MODEL_BG_OFFSET] = this._cellColorResolver.result.bg;\n            this._model.cells[j + RENDER_MODEL_FG_OFFSET] = this._cellColorResolver.result.fg;\n            this._model.cells[j + RENDER_MODEL_EXT_OFFSET] = this._cellColorResolver.result.ext;\n          }\n        }\n      }\n    }\n    if (modelUpdated) {\n      this._rectangleRenderer.value!.updateBackgrounds(this._model);\n    }\n    this._rectangleRenderer.value!.updateCursor(this._model);\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    // Perform a new measure if the CharMeasure dimensions are not yet available\n    if (!this._charSizeService.width || !this._charSizeService.height) {\n      return;\n    }\n\n    // Calculate the device character width. Width is floored as it must be drawn to an integer grid\n    // in order for the char atlas glyphs to not be blurry.\n    this.dimensions.device.char.width = Math.floor(this._charSizeService.width * this._devicePixelRatio);\n\n    // Calculate the device character height. Height is ceiled in case devicePixelRatio is a\n    // floating point number in order to ensure there is enough space to draw the character to the\n    // cell.\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * this._devicePixelRatio);\n\n    // Calculate the device cell height, if lineHeight is _not_ 1, the resulting value will be\n    // floored since lineHeight can never be lower then 1, this guarentees the device cell height\n    // will always be larger than device char height.\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n\n    // Calculate the y offset within a cell that glyph should draw at in order for it to be centered\n    // correctly within the cell.\n    this.dimensions.device.char.top = this._optionsService.rawOptions.lineHeight === 1 ? 0 : Math.round((this.dimensions.device.cell.height - this.dimensions.device.char.height) / 2);\n\n    // Calculate the device cell width, taking the letterSpacing into account.\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n\n    // Calculate the x offset with a cell that text should draw from in order for it to be centered\n    // correctly within the cell.\n    this.dimensions.device.char.left = Math.floor(this._optionsService.rawOptions.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions, the device dimensions define the actual number of pixel in\n    // the canvas\n    this.dimensions.device.canvas.height = this._terminal.rows * this.dimensions.device.cell.height;\n    this.dimensions.device.canvas.width = this._terminal.cols * this.dimensions.device.cell.width;\n\n    // The the size of the canvas on the page. It's important that this rounds to nearest integer\n    // and not ceils as browsers often have floating point precision issues where\n    // `window.devicePixelRatio` ends up being something like `1.100000023841858` for example, when\n    // it's actually 1.1. Ceiling may causes blurriness as the backing canvas image is 1 pixel too\n    // large for the canvas element size.\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / this._devicePixelRatio);\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / this._devicePixelRatio);\n\n    // Get the CSS dimensions of an individual cell. This needs to be derived from the calculated\n    // device pixel canvas value above. CharMeasure.width/height by itself is insufficient when the\n    // page is not at 100% zoom level as CharMeasure is measured in CSS pixels, but the actual char\n    // size on the canvas can differ.\n    this.dimensions.css.cell.height = this.dimensions.device.cell.height / this._devicePixelRatio;\n    this.dimensions.css.cell.width = this.dimensions.device.cell.width / this._devicePixelRatio;\n  }\n\n  private _setCanvasDevicePixelDimensions(width: number, height: number): void {\n    if (this._canvas.width === width && this._canvas.height === height) {\n      return;\n    }\n    // While the actual canvas size has changed, keep device canvas dimensions as the value before\n    // the change as it's an exact multiple of the cell sizes.\n    this._canvas.width = width;\n    this._canvas.height = height;\n    this._requestRedrawViewport();\n  }\n\n  private _requestRedrawViewport(): void {\n    this._onRequestRedraw.fire({ start: 0, end: this._terminal.rows - 1 });\n  }\n\n  private _requestRedrawCursor(): void {\n    const cursorY = this._terminal.buffer.active.cursorY;\n    this._onRequestRedraw.fire({ start: cursorY, end: cursorY });\n  }\n}\n\n// TODO: Share impl with core\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nfunction clamp(value: number, max: number, min: number = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { throwIfFalsy } from 'browser/renderer/shared/RendererUtils';\n\n/**\n * A matrix that when multiplies will translate 0-1 coordinates (left to right,\n * top to bottom) to clip space.\n */\nexport const PROJECTION_MATRIX = new Float32Array([\n  2, 0, 0, 0,\n  0, -2, 0, 0,\n  0, 0, 1, 0,\n  -1, 1, 0, 1\n]);\n\nexport function createProgram(gl: WebGLRenderingContext, vertexSource: string, fragmentSource: string): WebGLProgram | undefined {\n  const program = throwIfFalsy(gl.createProgram());\n  gl.attachShader(program, throwIfFalsy(createShader(gl, gl.VERTEX_SHADER, vertexSource)));\n  gl.attachShader(program, throwIfFalsy(createShader(gl, gl.FRAGMENT_SHADER, fragmentSource)));\n  gl.linkProgram(program);\n  const success = gl.getProgramParameter(program, gl.LINK_STATUS);\n  if (success) {\n    return program;\n  }\n\n  console.error(gl.getProgramInfoLog(program));\n  gl.deleteProgram(program);\n}\n\nexport function createShader(gl: WebGLRenderingContext, type: number, source: string): WebGLShader | undefined {\n  const shader = throwIfFalsy(gl.createShader(type));\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  if (success) {\n    return shader;\n  }\n\n  console.error(gl.getShaderInfoLog(shader));\n  gl.deleteShader(shader);\n}\n\nexport function expandFloat32Array(source: Float32Array, max: number): Float32Array {\n  const newLength = Math.min(source.length * 2, max);\n  const newArray = new Float32Array(newLength);\n  for (let i = 0; i < source.length; i++) {\n    newArray[i] = source[i];\n  }\n  return newArray;\n}\n\nexport class GLTexture {\n  public texture: WebGLTexture;\n  public version: number;\n\n  constructor(texture: WebGLTexture) {\n    this.texture = texture;\n    this.version = -1;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ReadonlyColorSet } from 'browser/Types';\nimport { acquireTextureAtlas } from 'browser/renderer/shared/CharAtlasCache';\nimport { TEXT_BASELINE } from 'browser/renderer/shared/Constants';\nimport { throwIfFalsy } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions, ITextureAtlas } from 'browser/renderer/shared/Types';\nimport { ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService } from 'common/services/Services';\nimport { Terminal } from '@xterm/xterm';\nimport { IRenderLayer } from './Types';\n\nexport abstract class BaseRenderLayer extends Disposable implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _deviceCharWidth: number = 0;\n  private _deviceCharHeight: number = 0;\n  private _deviceCellWidth: number = 0;\n  private _deviceCellHeight: number = 0;\n  private _deviceCharLeft: number = 0;\n  private _deviceCharTop: number = 0;\n\n  protected _charAtlas: ITextureAtlas | undefined;\n\n  constructor(\n    terminal: Terminal,\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected readonly _coreBrowserService: ICoreBrowserService,\n    protected readonly _optionsService: IOptionsService,\n    protected readonly _themeService: IThemeService\n  ) {\n    super();\n    this._canvas = this._coreBrowserService.mainDocument.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n    this.register(this._themeService.onChangeColors(e => {\n      this._refreshCharAtlas(terminal, e);\n      this.reset(terminal);\n    }));\n    this.register(toDisposable(() => {\n      this._canvas.remove();\n    }));\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', { alpha: this._alpha }));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public handleBlur(terminal: Terminal): void {}\n  public handleFocus(terminal: Terminal): void {}\n  public handleCursorMove(terminal: Terminal): void {}\n  public handleGridChanged(terminal: Terminal, startRow: number, endRow: number): void {}\n  public handleSelectionChanged(terminal: Terminal, start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {}\n\n  protected _setTransparency(terminal: Terminal, alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = this._canvas.cloneNode() as HTMLCanvasElement;\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(terminal, this._themeService.colors);\n    this.handleGridChanged(terminal, 0, terminal.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param terminal The terminal.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(terminal: Terminal, colorSet: ReadonlyColorSet): void {\n    if (this._deviceCharWidth <= 0 && this._deviceCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireTextureAtlas(terminal, this._optionsService.rawOptions, colorSet, this._deviceCellWidth, this._deviceCellHeight, this._deviceCharWidth, this._deviceCharHeight, this._coreBrowserService.dpr);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(terminal: Terminal, dim: IRenderDimensions): void {\n    this._deviceCellWidth = dim.device.cell.width;\n    this._deviceCellHeight = dim.device.cell.height;\n    this._deviceCharWidth = dim.device.char.width;\n    this._deviceCharHeight = dim.device.char.height;\n    this._deviceCharLeft = dim.device.char.left;\n    this._deviceCharTop = dim.device.char.top;\n    this._canvas.width = dim.device.canvas.width;\n    this._canvas.height = dim.device.canvas.height;\n    this._canvas.style.width = `${dim.css.canvas.width}px`;\n    this._canvas.style.height = `${dim.css.canvas.height}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(terminal, this._themeService.colors);\n  }\n\n  public abstract reset(terminal: Terminal): void;\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n      x * this._deviceCellWidth,\n      (y + 1) * this._deviceCellHeight - this._coreBrowserService.dpr - 1 /* Ensure it's drawn within the cell */,\n      width * this._deviceCellWidth,\n      this._coreBrowserService.dpr);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._themeService.colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n        x * this._deviceCellWidth,\n        y * this._deviceCellHeight,\n        width * this._deviceCellWidth,\n        height * this._deviceCellHeight);\n    } else {\n      this._ctx.fillStyle = this._themeService.colors.background.css;\n      this._ctx.fillRect(\n        x * this._deviceCellWidth,\n        y * this._deviceCellHeight,\n        width * this._deviceCellWidth,\n        height * this._deviceCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param terminal The terminal.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  protected _fillCharTrueColor(terminal: Terminal, cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(terminal, false, false);\n    this._ctx.textBaseline = TEXT_BASELINE;\n    this._clipCell(x, y, cell.getWidth());\n    this._ctx.fillText(\n      cell.getChars(),\n      x * this._deviceCellWidth + this._deviceCharLeft,\n      y * this._deviceCellHeight + this._deviceCharTop + this._deviceCharHeight);\n  }\n\n  /**\n   * Clips a cell to ensure no pixels will be drawn outside of it.\n   * @param x The column to clip.\n   * @param y The row to clip.\n   * @param width The number of columns to clip.\n   */\n  private _clipCell(x: number, y: number, width: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n      x * this._deviceCellWidth,\n      y * this._deviceCellHeight,\n      width * this._deviceCellWidth,\n      this._deviceCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param terminal The terminal.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(terminal: Terminal, isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? terminal.options.fontWeightBold : terminal.options.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${terminal.options.fontSize! * this._coreBrowserService.dpr}px ${terminal.options.fontFamily}`;\n  }\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { is256Color } from 'browser/renderer/shared/CharAtlasUtils';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent } from 'browser/Types';\nimport { IOptionsService } from 'common/services/Services';\nimport { Terminal } from '@xterm/xterm';\nimport { BaseRenderLayer } from './BaseRenderLayer';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    terminal: Terminal,\n    linkifier2: ILinkifier2,\n    coreBrowserService: ICoreBrowserService,\n    optionsService: IOptionsService,\n    themeService: IThemeService\n  ) {\n    super(terminal, container, 'link', zIndex, true, coreBrowserService, optionsService, themeService);\n\n    this.register(linkifier2.onShowLinkUnderline(e => this._handleShowLinkUnderline(e)));\n    this.register(linkifier2.onHideLinkUnderline(e => this._handleHideLinkUnderline(e)));\n  }\n\n  public resize(terminal: Terminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(terminal: Terminal): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _handleShowLinkUnderline(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._themeService.colors.background.css;\n    } else if (e.fg !== undefined && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._themeService.colors.ansi[e.fg!].css;\n    } else {\n      this._ctx.fillStyle = this._themeService.colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _handleHideLinkUnderline(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","import { ISelectionRenderModel } from 'browser/renderer/shared/Types';\nimport { ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ReadonlyColorSet } from 'browser/Types';\nimport { Attributes, BgFlags, ExtFlags, FgFlags, NULL_CELL_CODE, UnderlineStyle } from 'common/buffer/Constants';\nimport { IDecorationService, IOptionsService } from 'common/services/Services';\nimport { ICellData } from 'common/Types';\nimport { Terminal } from '@xterm/xterm';\nimport { rgba } from 'common/Color';\nimport { treatGlyphAsBackgroundColor } from 'browser/renderer/shared/RendererUtils';\n\n// Work variables to avoid garbage collection\nlet $fg = 0;\nlet $bg = 0;\nlet $hasFg = false;\nlet $hasBg = false;\nlet $isSelected = false;\nlet $colors: ReadonlyColorSet | undefined;\nlet $variantOffset = 0;\n\nexport class CellColorResolver {\n  /**\n   * The shared result of the {@link resolve} call. This is only safe to use immediately after as\n   * any other calls will share object.\n   */\n  public readonly result: { fg: number, bg: number, ext: number } = {\n    fg: 0,\n    bg: 0,\n    ext: 0\n  };\n\n  constructor(\n    private readonly _terminal: Terminal,\n    private readonly _optionService: IOptionsService,\n    private readonly _selectionRenderModel: ISelectionRenderModel,\n    private readonly _decorationService: IDecorationService,\n    private readonly _coreBrowserService: ICoreBrowserService,\n    private readonly _themeService: IThemeService\n  ) {\n  }\n\n  /**\n   * Resolves colors for the cell, putting the result into the shared {@link result}. This resolves\n   * overrides, inverse and selection for the cell which can then be used to feed into the renderer.\n   */\n  public resolve(cell: ICellData, x: number, y: number, deviceCellWidth: number): void {\n    this.result.bg = cell.bg;\n    this.result.fg = cell.fg;\n    this.result.ext = cell.bg & BgFlags.HAS_EXTENDED ? cell.extended.ext : 0;\n    // Get any foreground/background overrides, this happens on the model to avoid spreading\n    // override logic throughout the different sub-renderers\n\n    // Reset overrides work variables\n    $bg = 0;\n    $fg = 0;\n    $hasBg = false;\n    $hasFg = false;\n    $isSelected = false;\n    $colors = this._themeService.colors;\n    $variantOffset = 0;\n\n    const code = cell.getCode();\n    if (code !== NULL_CELL_CODE && cell.extended.underlineStyle === UnderlineStyle.DOTTED) {\n      const lineWidth = Math.max(1, Math.floor(this._optionService.rawOptions.fontSize * this._coreBrowserService.dpr / 15));\n      $variantOffset = x * deviceCellWidth % (Math.round(lineWidth) * 2);\n    }\n\n    // Apply decorations on the bottom layer\n    this._decorationService.forEachDecorationAtCell(x, y, 'bottom', d => {\n      if (d.backgroundColorRGB) {\n        $bg = d.backgroundColorRGB.rgba >> 8 & Attributes.RGB_MASK;\n        $hasBg = true;\n      }\n      if (d.foregroundColorRGB) {\n        $fg = d.foregroundColorRGB.rgba >> 8 & Attributes.RGB_MASK;\n        $hasFg = true;\n      }\n    });\n\n    // Apply the selection color if needed\n    $isSelected = this._selectionRenderModel.isCellSelected(this._terminal, x, y);\n    if ($isSelected) {\n      // If the cell has a bg color, retain the color by blending it with the selection color\n      if (\n        (this.result.fg & FgFlags.INVERSE) ||\n        (this.result.bg & Attributes.CM_MASK) !== Attributes.CM_DEFAULT\n      ) {\n        // Resolve the standard bg color\n        if (this.result.fg & FgFlags.INVERSE) {\n          switch (this.result.fg & Attributes.CM_MASK) {\n            case Attributes.CM_P16:\n            case Attributes.CM_P256:\n              $bg = this._themeService.colors.ansi[this.result.fg & Attributes.PCOLOR_MASK].rgba;\n              break;\n            case Attributes.CM_RGB:\n              $bg = ((this.result.fg & Attributes.RGB_MASK) << 8) | 0xFF;\n              break;\n            case Attributes.CM_DEFAULT:\n            default:\n              $bg = this._themeService.colors.foreground.rgba;\n          }\n        } else {\n          switch (this.result.bg & Attributes.CM_MASK) {\n            case Attributes.CM_P16:\n            case Attributes.CM_P256:\n              $bg = this._themeService.colors.ansi[this.result.bg & Attributes.PCOLOR_MASK].rgba;\n              break;\n            case Attributes.CM_RGB:\n              $bg = ((this.result.bg & Attributes.RGB_MASK) << 8) | 0xFF;\n              break;\n            // No need to consider default bg color here as it's not possible\n          }\n        }\n        // Blend with selection bg color\n        $bg = rgba.blend(\n          $bg,\n          ((this._coreBrowserService.isFocused ? $colors.selectionBackgroundOpaque : $colors.selectionInactiveBackgroundOpaque).rgba & 0xFFFFFF00) | 0x80\n        ) >> 8 & Attributes.RGB_MASK;\n      } else {\n        $bg = (this._coreBrowserService.isFocused ? $colors.selectionBackgroundOpaque : $colors.selectionInactiveBackgroundOpaque).rgba >> 8 & Attributes.RGB_MASK;\n      }\n      $hasBg = true;\n\n      // Apply explicit selection foreground if present\n      if ($colors.selectionForeground) {\n        $fg = $colors.selectionForeground.rgba >> 8 & Attributes.RGB_MASK;\n        $hasFg = true;\n      }\n\n      // Overwrite fg as bg if it's a special decorative glyph (eg. powerline)\n      if (treatGlyphAsBackgroundColor(cell.getCode())) {\n        // Inverse default background should be treated as transparent\n        if (\n          (this.result.fg & FgFlags.INVERSE) &&\n          (this.result.bg & Attributes.CM_MASK) === Attributes.CM_DEFAULT\n        ) {\n          $fg = (this._coreBrowserService.isFocused ? $colors.selectionBackgroundOpaque : $colors.selectionInactiveBackgroundOpaque).rgba >> 8 & Attributes.RGB_MASK;\n        } else {\n\n          if (this.result.fg & FgFlags.INVERSE) {\n            switch (this.result.bg & Attributes.CM_MASK) {\n              case Attributes.CM_P16:\n              case Attributes.CM_P256:\n                $fg = this._themeService.colors.ansi[this.result.bg & Attributes.PCOLOR_MASK].rgba;\n                break;\n              case Attributes.CM_RGB:\n                $fg = ((this.result.bg & Attributes.RGB_MASK) << 8) | 0xFF;\n                break;\n              // No need to consider default bg color here as it's not possible\n            }\n          } else {\n            switch (this.result.fg & Attributes.CM_MASK) {\n              case Attributes.CM_P16:\n              case Attributes.CM_P256:\n                $fg = this._themeService.colors.ansi[this.result.fg & Attributes.PCOLOR_MASK].rgba;\n                break;\n              case Attributes.CM_RGB:\n                $fg = ((this.result.fg & Attributes.RGB_MASK) << 8) | 0xFF;\n                break;\n              case Attributes.CM_DEFAULT:\n              default:\n                $fg = this._themeService.colors.foreground.rgba;\n            }\n          }\n\n          $fg = rgba.blend(\n            $fg,\n            ((this._coreBrowserService.isFocused ? $colors.selectionBackgroundOpaque : $colors.selectionInactiveBackgroundOpaque).rgba & 0xFFFFFF00) | 0x80\n          ) >> 8 & Attributes.RGB_MASK;\n        }\n        $hasFg = true;\n      }\n    }\n\n    // Apply decorations on the top layer\n    this._decorationService.forEachDecorationAtCell(x, y, 'top', d => {\n      if (d.backgroundColorRGB) {\n        $bg = d.backgroundColorRGB.rgba >> 8 & Attributes.RGB_MASK;\n        $hasBg = true;\n      }\n      if (d.foregroundColorRGB) {\n        $fg = d.foregroundColorRGB.rgba >> 8 & Attributes.RGB_MASK;\n        $hasFg = true;\n      }\n    });\n\n    // Convert any overrides from rgba to the fg/bg packed format. This resolves the inverse flag\n    // ahead of time in order to use the correct cache key\n    if ($hasBg) {\n      if ($isSelected) {\n        // Non-RGB attributes from model + force non-dim + override + force RGB color mode\n        $bg = (cell.bg & ~Attributes.RGB_MASK & ~BgFlags.DIM) | $bg | Attributes.CM_RGB;\n      } else {\n        // Non-RGB attributes from model + override + force RGB color mode\n        $bg = (cell.bg & ~Attributes.RGB_MASK) | $bg | Attributes.CM_RGB;\n      }\n    }\n    if ($hasFg) {\n      // Non-RGB attributes from model + force disable inverse + override + force RGB color mode\n      $fg = (cell.fg & ~Attributes.RGB_MASK & ~FgFlags.INVERSE) | $fg | Attributes.CM_RGB;\n    }\n\n    // Handle case where inverse was specified by only one of bg override or fg override was set,\n    // resolving the other inverse color and setting the inverse flag if needed.\n    if (this.result.fg & FgFlags.INVERSE) {\n      if ($hasBg && !$hasFg) {\n        // Resolve bg color type (default color has a different meaning in fg vs bg)\n        if ((this.result.bg & Attributes.CM_MASK) === Attributes.CM_DEFAULT) {\n          $fg = (this.result.fg & ~(Attributes.RGB_MASK | FgFlags.INVERSE | Attributes.CM_MASK)) | (($colors.background.rgba >> 8 & Attributes.RGB_MASK) & Attributes.RGB_MASK) | Attributes.CM_RGB;\n        } else {\n          $fg = (this.result.fg & ~(Attributes.RGB_MASK | FgFlags.INVERSE | Attributes.CM_MASK)) | this.result.bg & (Attributes.RGB_MASK | Attributes.CM_MASK);\n        }\n        $hasFg = true;\n      }\n      if (!$hasBg && $hasFg) {\n        // Resolve bg color type (default color has a different meaning in fg vs bg)\n        if ((this.result.fg & Attributes.CM_MASK) === Attributes.CM_DEFAULT) {\n          $bg = (this.result.bg & ~(Attributes.RGB_MASK | Attributes.CM_MASK)) | (($colors.foreground.rgba >> 8 & Attributes.RGB_MASK) & Attributes.RGB_MASK) | Attributes.CM_RGB;\n        } else {\n          $bg = (this.result.bg & ~(Attributes.RGB_MASK | Attributes.CM_MASK)) | this.result.fg & (Attributes.RGB_MASK | Attributes.CM_MASK);\n        }\n        $hasBg = true;\n      }\n    }\n\n    // Release object\n    $colors = undefined;\n\n    // Use the override if it exists\n    this.result.bg = $hasBg ? $bg : this.result.bg;\n    this.result.fg = $hasFg ? $fg : this.result.fg;\n\n    // Reset overrides variantOffset\n    this.result.ext &= ~ExtFlags.VARIANT_OFFSET;\n    this.result.ext |= ($variantOffset << 29) & ExtFlags.VARIANT_OFFSET;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextureAtlas } from 'browser/renderer/shared/TextureAtlas';\nimport { ITerminalOptions, Terminal } from '@xterm/xterm';\nimport { ITerminal, ReadonlyColorSet } from 'browser/Types';\nimport { ICharAtlasConfig, ITextureAtlas } from 'browser/renderer/shared/Types';\nimport { generateConfig, configEquals } from 'browser/renderer/shared/CharAtlasUtils';\n\ninterface ITextureAtlasCacheEntry {\n  atlas: ITextureAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: Terminal[];\n}\n\nconst charAtlasCache: ITextureAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireTextureAtlas(\n  terminal: Terminal,\n  options: Required<ITerminalOptions>,\n  colors: ReadonlyColorSet,\n  deviceCellWidth: number,\n  deviceCellHeight: number,\n  deviceCharWidth: number,\n  deviceCharHeight: number,\n  devicePixelRatio: number\n): ITextureAtlas {\n  const newConfig = generateConfig(deviceCellWidth, deviceCellHeight, deviceCharWidth, deviceCharHeight, options, colors, devicePixelRatio);\n\n  // Check to see if the terminal already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(terminal);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the terminal from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the terminal to the cache entry and return\n      entry.ownedBy.push(terminal);\n      return entry.atlas;\n    }\n  }\n\n  const core: ITerminal = (terminal as any)._core;\n  const newEntry: ITextureAtlasCacheEntry = {\n    atlas: new TextureAtlas(document, newConfig, core.unicodeService),\n    config: newConfig,\n    ownedBy: [terminal]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n * @param terminal The terminal to remove.\n */\nexport function removeTerminalFromCache(terminal: Terminal): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(terminal);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only terminal\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from './Types';\nimport { Attributes } from 'common/buffer/Constants';\nimport { ITerminalOptions } from '@xterm/xterm';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { NULL_COLOR } from 'common/Color';\n\nexport function generateConfig(deviceCellWidth: number, deviceCellHeight: number, deviceCharWidth: number, deviceCharHeight: number, options: Required<ITerminalOptions>, colors: ReadonlyColorSet, devicePixelRatio: number): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors: IColorSet = {\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: NULL_COLOR,\n    cursorAccent: NULL_COLOR,\n    selectionForeground: NULL_COLOR,\n    selectionBackgroundTransparent: NULL_COLOR,\n    selectionBackgroundOpaque: NULL_COLOR,\n    selectionInactiveBackgroundTransparent: NULL_COLOR,\n    selectionInactiveBackgroundOpaque: NULL_COLOR,\n    // For the static char atlas, we only use the first 16 colors, but we need all 256 for the\n    // dynamic character atlas.\n    ansi: colors.ansi.slice(),\n    contrastCache: colors.contrastCache,\n    halfContrastCache: colors.halfContrastCache\n  };\n  return {\n    customGlyphs: options.customGlyphs,\n    devicePixelRatio,\n    letterSpacing: options.letterSpacing,\n    lineHeight: options.lineHeight,\n    deviceCellWidth: deviceCellWidth,\n    deviceCellHeight: deviceCellHeight,\n    deviceCharWidth: deviceCharWidth,\n    deviceCharHeight: deviceCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    drawBoldTextInBrightColors: options.drawBoldTextInBrightColors,\n    minimumContrastRatio: options.minimumContrastRatio,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.customGlyphs === b.customGlyphs &&\n      a.lineHeight === b.lineHeight &&\n      a.letterSpacing === b.letterSpacing &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.deviceCharWidth === b.deviceCharWidth &&\n      a.deviceCharHeight === b.deviceCharHeight &&\n      a.drawBoldTextInBrightColors === b.drawBoldTextInBrightColors &&\n      a.minimumContrastRatio === b.minimumContrastRatio &&\n      a.colors.foreground.rgba === b.colors.foreground.rgba &&\n      a.colors.background.rgba === b.colors.background.rgba;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return (colorCode & Attributes.CM_MASK) === Attributes.CM_P16 || (colorCode & Attributes.CM_MASK) === Attributes.CM_P256;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge\n// would result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from 'browser/services/Services';\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    private _renderCallback: () => void,\n    private _coreBrowserService: ICoreBrowserService\n  ) {\n    this.isCursorVisible = true;\n    if (this._coreBrowserService.isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      this._coreBrowserService.window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      this._coreBrowserService.window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      this._coreBrowserService.window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      this._coreBrowserService.window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = this._coreBrowserService.window.setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = this._coreBrowserService.window.setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      this._coreBrowserService.window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      this._coreBrowserService.window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      this._coreBrowserService.window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(): void {\n    // Clear out any existing timers just in case\n    this.pause();\n\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { throwIfFalsy } from 'browser/renderer/shared/RendererUtils';\n\ninterface IBlockVector {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\nexport const blockElementDefinitions: { [index: string]: IBlockVector[] | undefined } = {\n  // Block elements (0x2580-0x2590)\n  '▀': [{ x: 0, y: 0, w: 8, h: 4 }], // UPPER HALF BLOCK\n  '▁': [{ x: 0, y: 7, w: 8, h: 1 }], // LOWER ONE EIGHTH BLOCK\n  '▂': [{ x: 0, y: 6, w: 8, h: 2 }], // LOWER ONE QUARTER BLOCK\n  '▃': [{ x: 0, y: 5, w: 8, h: 3 }], // LOWER THREE EIGHTHS BLOCK\n  '▄': [{ x: 0, y: 4, w: 8, h: 4 }], // LOWER HALF BLOCK\n  '▅': [{ x: 0, y: 3, w: 8, h: 5 }], // LOWER FIVE EIGHTHS BLOCK\n  '▆': [{ x: 0, y: 2, w: 8, h: 6 }], // LOWER THREE QUARTERS BLOCK\n  '▇': [{ x: 0, y: 1, w: 8, h: 7 }], // LOWER SEVEN EIGHTHS BLOCK\n  '█': [{ x: 0, y: 0, w: 8, h: 8 }], // FULL BLOCK\n  '▉': [{ x: 0, y: 0, w: 7, h: 8 }], // LEFT SEVEN EIGHTHS BLOCK\n  '▊': [{ x: 0, y: 0, w: 6, h: 8 }], // LEFT THREE QUARTERS BLOCK\n  '▋': [{ x: 0, y: 0, w: 5, h: 8 }], // LEFT FIVE EIGHTHS BLOCK\n  '▌': [{ x: 0, y: 0, w: 4, h: 8 }], // LEFT HALF BLOCK\n  '▍': [{ x: 0, y: 0, w: 3, h: 8 }], // LEFT THREE EIGHTHS BLOCK\n  '▎': [{ x: 0, y: 0, w: 2, h: 8 }], // LEFT ONE QUARTER BLOCK\n  '▏': [{ x: 0, y: 0, w: 1, h: 8 }], // LEFT ONE EIGHTH BLOCK\n  '▐': [{ x: 4, y: 0, w: 4, h: 8 }], // RIGHT HALF BLOCK\n\n  // Block elements (0x2594-0x2595)\n  '▔': [{ x: 0, y: 0, w: 8, h: 1 }], // UPPER ONE EIGHTH BLOCK\n  '▕': [{ x: 7, y: 0, w: 1, h: 8 }], // RIGHT ONE EIGHTH BLOCK\n\n  // Terminal graphic characters (0x2596-0x259F)\n  '▖': [{ x: 0, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER LEFT\n  '▗': [{ x: 4, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER RIGHT\n  '▘': [{ x: 0, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER LEFT\n  '▙': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER LEFT AND LOWER LEFT AND LOWER RIGHT\n  '▚': [{ x: 0, y: 0, w: 4, h: 4 }, { x: 4, y: 4, w: 4, h: 4 }], // QUADRANT UPPER LEFT AND LOWER RIGHT\n  '▛': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 4, y: 0, w: 4, h: 4 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER LEFT\n  '▜': [{ x: 0, y: 0, w: 8, h: 4 }, { x: 4, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER RIGHT\n  '▝': [{ x: 4, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER RIGHT\n  '▞': [{ x: 4, y: 0, w: 4, h: 4 }, { x: 0, y: 4, w: 4, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT\n  '▟': [{ x: 4, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT AND LOWER RIGHT\n\n  // VERTICAL ONE EIGHTH BLOCK-2 through VERTICAL ONE EIGHTH BLOCK-7\n  '\\u{1FB70}': [{ x: 1, y: 0, w: 1, h: 8 }],\n  '\\u{1FB71}': [{ x: 2, y: 0, w: 1, h: 8 }],\n  '\\u{1FB72}': [{ x: 3, y: 0, w: 1, h: 8 }],\n  '\\u{1FB73}': [{ x: 4, y: 0, w: 1, h: 8 }],\n  '\\u{1FB74}': [{ x: 5, y: 0, w: 1, h: 8 }],\n  '\\u{1FB75}': [{ x: 6, y: 0, w: 1, h: 8 }],\n\n  // HORIZONTAL ONE EIGHTH BLOCK-2 through HORIZONTAL ONE EIGHTH BLOCK-7\n  '\\u{1FB76}': [{ x: 0, y: 1, w: 8, h: 1 }],\n  '\\u{1FB77}': [{ x: 0, y: 2, w: 8, h: 1 }],\n  '\\u{1FB78}': [{ x: 0, y: 3, w: 8, h: 1 }],\n  '\\u{1FB79}': [{ x: 0, y: 4, w: 8, h: 1 }],\n  '\\u{1FB7A}': [{ x: 0, y: 5, w: 8, h: 1 }],\n  '\\u{1FB7B}': [{ x: 0, y: 6, w: 8, h: 1 }],\n\n  // LEFT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7C}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // LEFT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7D}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7E}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7F}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // UPPER AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB80}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // HORIZONTAL ONE EIGHTH BLOCK-1358\n  '\\u{1FB81}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 2, w: 8, h: 1 }, { x: 0, y: 4, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n\n  // UPPER ONE QUARTER BLOCK\n  '\\u{1FB82}': [{ x: 0, y: 0, w: 8, h: 2 }],\n  // UPPER THREE EIGHTHS BLOCK\n  '\\u{1FB83}': [{ x: 0, y: 0, w: 8, h: 3 }],\n  // UPPER FIVE EIGHTHS BLOCK\n  '\\u{1FB84}': [{ x: 0, y: 0, w: 8, h: 5 }],\n  // UPPER THREE QUARTERS BLOCK\n  '\\u{1FB85}': [{ x: 0, y: 0, w: 8, h: 6 }],\n  // UPPER SEVEN EIGHTHS BLOCK\n  '\\u{1FB86}': [{ x: 0, y: 0, w: 8, h: 7 }],\n\n  // RIGHT ONE QUARTER BLOCK\n  '\\u{1FB87}': [{ x: 6, y: 0, w: 2, h: 8 }],\n  // RIGHT THREE EIGHTHS B0OCK\n  '\\u{1FB88}': [{ x: 5, y: 0, w: 3, h: 8 }],\n  // RIGHT FIVE EIGHTHS BL0CK\n  '\\u{1FB89}': [{ x: 3, y: 0, w: 5, h: 8 }],\n  // RIGHT THREE QUARTERS 0LOCK\n  '\\u{1FB8A}': [{ x: 2, y: 0, w: 6, h: 8 }],\n  // RIGHT SEVEN EIGHTHS B0OCK\n  '\\u{1FB8B}': [{ x: 1, y: 0, w: 7, h: 8 }],\n\n  // CHECKER BOARD FILL\n  '\\u{1FB95}': [\n    { x: 0, y: 0, w: 2, h: 2 }, { x: 4, y: 0, w: 2, h: 2 },\n    { x: 2, y: 2, w: 2, h: 2 }, { x: 6, y: 2, w: 2, h: 2 },\n    { x: 0, y: 4, w: 2, h: 2 }, { x: 4, y: 4, w: 2, h: 2 },\n    { x: 2, y: 6, w: 2, h: 2 }, { x: 6, y: 6, w: 2, h: 2 }\n  ],\n  // INVERSE CHECKER BOARD FILL\n  '\\u{1FB96}': [\n    { x: 2, y: 0, w: 2, h: 2 }, { x: 6, y: 0, w: 2, h: 2 },\n    { x: 0, y: 2, w: 2, h: 2 }, { x: 4, y: 2, w: 2, h: 2 },\n    { x: 2, y: 4, w: 2, h: 2 }, { x: 6, y: 4, w: 2, h: 2 },\n    { x: 0, y: 6, w: 2, h: 2 }, { x: 4, y: 6, w: 2, h: 2 }\n  ],\n  // HEAVY HORIZONTAL FILL (upper middle and lower one quarter block)\n  '\\u{1FB97}': [{ x: 0, y: 2, w: 8, h: 2 }, { x: 0, y: 6, w: 8, h: 2 }]\n};\n\ntype PatternDefinition = number[][];\n\n/**\n * Defines the repeating pattern used by special characters, the pattern is made up of a 2d array of\n * pixel values to be filled (1) or not filled (0).\n */\nconst patternCharacterDefinitions: { [key: string]: PatternDefinition | undefined } = {\n  // Shade characters (0x2591-0x2593)\n  '░': [ // LIGHT SHADE (25%)\n    [1, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 0]\n  ],\n  '▒': [ // MEDIUM SHADE (50%)\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [0, 0]\n  ],\n  '▓': [ // DARK SHADE (75%)\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, 1]\n  ]\n};\n\nconst enum Shapes {\n  /** │ */ TOP_TO_BOTTOM = 'M.5,0 L.5,1',\n  /** ─ */ LEFT_TO_RIGHT = 'M0,.5 L1,.5',\n\n  /** └ */ TOP_TO_RIGHT = 'M.5,0 L.5,.5 L1,.5',\n  /** ┘ */ TOP_TO_LEFT = 'M.5,0 L.5,.5 L0,.5',\n  /** ┐ */ LEFT_TO_BOTTOM = 'M0,.5 L.5,.5 L.5,1',\n  /** ┌ */ RIGHT_TO_BOTTOM = 'M0.5,1 L.5,.5 L1,.5',\n\n  /** ╵ */ MIDDLE_TO_TOP = 'M.5,.5 L.5,0',\n  /** ╴ */ MIDDLE_TO_LEFT = 'M.5,.5 L0,.5',\n  /** ╶ */ MIDDLE_TO_RIGHT = 'M.5,.5 L1,.5',\n  /** ╷ */ MIDDLE_TO_BOTTOM = 'M.5,.5 L.5,1',\n\n  /** ┴ */ T_TOP = 'M0,.5 L1,.5 M.5,.5 L.5,0',\n  /** ┤ */ T_LEFT = 'M.5,0 L.5,1 M.5,.5 L0,.5',\n  /** ├ */ T_RIGHT = 'M.5,0 L.5,1 M.5,.5 L1,.5',\n  /** ┬ */ T_BOTTOM = 'M0,.5 L1,.5 M.5,.5 L.5,1',\n\n  /** ┼ */ CROSS = 'M0,.5 L1,.5 M.5,0 L.5,1',\n\n  /** ╌ */ TWO_DASHES_HORIZONTAL = 'M.1,.5 L.4,.5 M.6,.5 L.9,.5', // .2 empty, .3 filled\n  /** ┄ */ THREE_DASHES_HORIZONTAL = 'M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5', // .1333 empty, .2 filled\n  /** ┉ */ FOUR_DASHES_HORIZONTAL = 'M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5', // .1 empty, .15 filled\n  /** ╎ */ TWO_DASHES_VERTICAL = 'M.5,.1 L.5,.4 M.5,.6 L.5,.9',\n  /** ┆ */ THREE_DASHES_VERTICAL = 'M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333',\n  /** ┊ */ FOUR_DASHES_VERTICAL = 'M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95',\n}\n\nconst enum Style {\n  NORMAL = 1,\n  BOLD = 3\n}\n\n/**\n * @param xp The percentage of 15% of the x axis.\n * @param yp The percentage of 15% of the x axis on the y axis.\n */\ntype DrawFunctionDefinition = (xp: number, yp: number) => string;\n\n/**\n * This contains the definitions of all box drawing characters in the format of SVG paths (ie. the\n * svg d attribute).\n */\nexport const boxDrawingDefinitions: { [character: string]: { [fontWeight: number]: string | DrawFunctionDefinition } | undefined } = {\n  // Uniform normal and bold\n  '─': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT },\n  '━': { [Style.BOLD]:   Shapes.LEFT_TO_RIGHT },\n  '│': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM },\n  '┃': { [Style.BOLD]:   Shapes.TOP_TO_BOTTOM },\n  '┌': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM },\n  '┏': { [Style.BOLD]:   Shapes.RIGHT_TO_BOTTOM },\n  '┐': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM },\n  '┓': { [Style.BOLD]:   Shapes.LEFT_TO_BOTTOM },\n  '└': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT },\n  '┗': { [Style.BOLD]:   Shapes.TOP_TO_RIGHT },\n  '┘': { [Style.NORMAL]: Shapes.TOP_TO_LEFT },\n  '┛': { [Style.BOLD]:   Shapes.TOP_TO_LEFT },\n  '├': { [Style.NORMAL]: Shapes.T_RIGHT },\n  '┣': { [Style.BOLD]:   Shapes.T_RIGHT },\n  '┤': { [Style.NORMAL]: Shapes.T_LEFT },\n  '┫': { [Style.BOLD]:   Shapes.T_LEFT },\n  '┬': { [Style.NORMAL]: Shapes.T_BOTTOM },\n  '┳': { [Style.BOLD]:   Shapes.T_BOTTOM },\n  '┴': { [Style.NORMAL]: Shapes.T_TOP },\n  '┻': { [Style.BOLD]:   Shapes.T_TOP },\n  '┼': { [Style.NORMAL]: Shapes.CROSS },\n  '╋': { [Style.BOLD]:   Shapes.CROSS },\n  '╴': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT },\n  '╸': { [Style.BOLD]:   Shapes.MIDDLE_TO_LEFT },\n  '╵': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP },\n  '╹': { [Style.BOLD]:   Shapes.MIDDLE_TO_TOP },\n  '╶': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT },\n  '╺': { [Style.BOLD]:   Shapes.MIDDLE_TO_RIGHT },\n  '╷': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM },\n  '╻': { [Style.BOLD]:   Shapes.MIDDLE_TO_BOTTOM },\n\n  // Double border\n  '═': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '║': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╒': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╓': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},1 L${.5 - xp},.5 L1,.5 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╔': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╕': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L.5,${.5 - yp} L.5,1 M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╖': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},1 L${.5 + xp},.5 L0,.5 M${.5 - xp},.5 L${.5 - xp},1` },\n  '╗': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},1` },\n  '╘': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 + yp} L1,${.5 + yp} M.5,${.5 - yp} L1,${.5 - yp}` },\n  '╙': { [Style.NORMAL]: (xp, yp) => `M1,.5 L${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╚': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0 M1,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},0` },\n  '╛': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L.5,${.5 + yp} L.5,0 M0,${.5 - yp} L.5,${.5 - yp}` },\n  '╜': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 + xp},.5 L${.5 + xp},0 M${.5 - xp},.5 L${.5 - xp},0` },\n  '╝': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M0,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},0` },\n  '╞': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╟': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1 M${.5 + xp},.5 L1,.5` },\n  '╠': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╡': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L.5,${.5 - yp} M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╢': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 - xp},.5 M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╣': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},0 L${.5 + xp},1 M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0` },\n  '╤': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp} M.5,${.5 + yp} L.5,1` },\n  '╥': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},1 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╦': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╧': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - yp} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╨': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╩': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L1,${.5 + yp} M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╪': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╫': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╬': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n\n  // Diagonal\n  '╱': { [Style.NORMAL]: 'M1,0 L0,1' },\n  '╲': { [Style.NORMAL]: 'M0,0 L1,1' },\n  '╳': { [Style.NORMAL]: 'M1,0 L0,1 M0,0 L1,1' },\n\n  // Mixed weight\n  '╼': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '╽': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╾': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '╿': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┍': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┎': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┑': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┒': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┕': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┖': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┙': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┚': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┝': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┞': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┟': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┠': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┡': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┢': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┥': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┦': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┧': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┨': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┩': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┪': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┭': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┮': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┯': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┰': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┱': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┲': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┵': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┶': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┷': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┸': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┹': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┺': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┽': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}`,  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┾': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}`,   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┿': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '╀': { [Style.NORMAL]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}`, [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '╁': { [Style.NORMAL]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}`,    [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╂': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '╃': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '╄': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '╅': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '╆': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '╇': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}` },\n  '╈': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}` },\n  '╉': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}` },\n  '╊': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}` },\n\n  // Dashed\n  '╌': { [Style.NORMAL]: Shapes.TWO_DASHES_HORIZONTAL },\n  '╍': { [Style.BOLD]:   Shapes.TWO_DASHES_HORIZONTAL },\n  '┄': { [Style.NORMAL]: Shapes.THREE_DASHES_HORIZONTAL },\n  '┅': { [Style.BOLD]:   Shapes.THREE_DASHES_HORIZONTAL },\n  '┈': { [Style.NORMAL]: Shapes.FOUR_DASHES_HORIZONTAL },\n  '┉': { [Style.BOLD]:   Shapes.FOUR_DASHES_HORIZONTAL },\n  '╎': { [Style.NORMAL]: Shapes.TWO_DASHES_VERTICAL },\n  '╏': { [Style.BOLD]:   Shapes.TWO_DASHES_VERTICAL },\n  '┆': { [Style.NORMAL]: Shapes.THREE_DASHES_VERTICAL  },\n  '┇': { [Style.BOLD]:   Shapes.THREE_DASHES_VERTICAL },\n  '┊': { [Style.NORMAL]: Shapes.FOUR_DASHES_VERTICAL },\n  '┋': { [Style.BOLD]:   Shapes.FOUR_DASHES_VERTICAL },\n\n  // Curved\n  '╭': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 + (yp / .15 * .5)} C.5,${.5 + (yp / .15 * .5)},.5,.5,1,.5` },\n  '╮': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 + (yp / .15 * .5)} C.5,${.5 + (yp / .15 * .5)},.5,.5,0,.5` },\n  '╯': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - (yp / .15 * .5)} C.5,${.5 - (yp / .15 * .5)},.5,.5,0,.5` },\n  '╰': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - (yp / .15 * .5)} C.5,${.5 - (yp / .15 * .5)},.5,.5,1,.5` }\n};\n\ninterface IVectorShape {\n  d: string;\n  type: VectorType;\n  leftPadding?: number;\n  rightPadding?: number;\n}\n\nconst enum VectorType {\n  FILL,\n  STROKE\n}\n\n/**\n * This contains the definitions of the primarily used box drawing characters as vector shapes. The\n * reason these characters are defined specially is to avoid common problems if a user's font has\n * not been patched with powerline characters and also to get pixel perfect rendering as rendering\n * issues can occur around AA/SPAA.\n *\n * The line variants draw beyond the cell and get clipped to ensure the end of the line is not\n * visible.\n *\n * Original symbols defined in https://github.com/powerline/fontpatcher\n */\nexport const powerlineDefinitions: { [index: string]: IVectorShape } = {\n  // Right triangle solid\n  '\\u{E0B0}': { d: 'M0,0 L1,.5 L0,1', type: VectorType.FILL, rightPadding: 2 },\n  // Right triangle line\n  '\\u{E0B1}': { d: 'M-1,-.5 L1,.5 L-1,1.5', type: VectorType.STROKE, leftPadding: 1, rightPadding: 1 },\n  // Left triangle solid\n  '\\u{E0B2}': { d: 'M1,0 L0,.5 L1,1', type: VectorType.FILL, leftPadding: 2 },\n  // Left triangle line\n  '\\u{E0B3}': { d: 'M2,-.5 L0,.5 L2,1.5', type: VectorType.STROKE, leftPadding: 1, rightPadding: 1 },\n  // Right semi-circle solid\n  '\\u{E0B4}': { d: 'M0,0 L0,1 C0.552,1,1,0.776,1,.5 C1,0.224,0.552,0,0,0', type: VectorType.FILL, rightPadding: 1 },\n  // Right semi-circle line\n  '\\u{E0B5}': { d: 'M.2,1 C.422,1,.8,.826,.78,.5 C.8,.174,0.422,0,.2,0', type: VectorType.STROKE, rightPadding: 1 },\n  // Left semi-circle solid\n  '\\u{E0B6}': { d: 'M1,0 L1,1 C0.448,1,0,0.776,0,.5 C0,0.224,0.448,0,1,0', type: VectorType.FILL, leftPadding: 1 },\n  // Left semi-circle line\n  '\\u{E0B7}': { d: 'M.8,1 C0.578,1,0.2,.826,.22,.5 C0.2,0.174,0.578,0,0.8,0', type: VectorType.STROKE, leftPadding: 1 },\n  // Lower left triangle\n  '\\u{E0B8}': { d: 'M-.5,-.5 L1.5,1.5 L-.5,1.5', type: VectorType.FILL },\n  // Backslash separator\n  '\\u{E0B9}': { d: 'M-.5,-.5 L1.5,1.5', type: VectorType.STROKE, leftPadding: 1, rightPadding: 1 },\n  // Lower right triangle\n  '\\u{E0BA}': { d: 'M1.5,-.5 L-.5,1.5 L1.5,1.5', type: VectorType.FILL },\n  // Upper left triangle\n  '\\u{E0BC}': { d: 'M1.5,-.5 L-.5,1.5 L-.5,-.5', type: VectorType.FILL },\n  // Forward slash separator\n  '\\u{E0BD}': { d: 'M1.5,-.5 L-.5,1.5', type: VectorType.STROKE, leftPadding: 1, rightPadding: 1 },\n  // Upper right triangle\n  '\\u{E0BE}': { d: 'M-.5,-.5 L1.5,1.5 L1.5,-.5', type: VectorType.FILL }\n};\n// Forward slash separator redundant\npowerlineDefinitions['\\u{E0BB}'] = powerlineDefinitions['\\u{E0BD}'];\n// Backslash separator redundant\npowerlineDefinitions['\\u{E0BF}'] = powerlineDefinitions['\\u{E0B9}'];\n\n/**\n * Try drawing a custom block element or box drawing character, returning whether it was\n * successfully drawn.\n */\nexport function tryDrawCustomChar(\n  ctx: CanvasRenderingContext2D,\n  c: string,\n  xOffset: number,\n  yOffset: number,\n  deviceCellWidth: number,\n  deviceCellHeight: number,\n  fontSize: number,\n  devicePixelRatio: number\n): boolean {\n  const blockElementDefinition = blockElementDefinitions[c];\n  if (blockElementDefinition) {\n    drawBlockElementChar(ctx, blockElementDefinition, xOffset, yOffset, deviceCellWidth, deviceCellHeight);\n    return true;\n  }\n\n  const patternDefinition = patternCharacterDefinitions[c];\n  if (patternDefinition) {\n    drawPatternChar(ctx, patternDefinition, xOffset, yOffset, deviceCellWidth, deviceCellHeight);\n    return true;\n  }\n\n  const boxDrawingDefinition = boxDrawingDefinitions[c];\n  if (boxDrawingDefinition) {\n    drawBoxDrawingChar(ctx, boxDrawingDefinition, xOffset, yOffset, deviceCellWidth, deviceCellHeight, devicePixelRatio);\n    return true;\n  }\n\n  const powerlineDefinition = powerlineDefinitions[c];\n  if (powerlineDefinition) {\n    drawPowerlineChar(ctx, powerlineDefinition, xOffset, yOffset, deviceCellWidth, deviceCellHeight, fontSize, devicePixelRatio);\n    return true;\n  }\n\n  return false;\n}\n\nfunction drawBlockElementChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IBlockVector[],\n  xOffset: number,\n  yOffset: number,\n  deviceCellWidth: number,\n  deviceCellHeight: number\n): void {\n  for (let i = 0; i < charDefinition.length; i++) {\n    const box = charDefinition[i];\n    const xEighth = deviceCellWidth / 8;\n    const yEighth = deviceCellHeight / 8;\n    ctx.fillRect(\n      xOffset + box.x * xEighth,\n      yOffset + box.y * yEighth,\n      box.w * xEighth,\n      box.h * yEighth\n    );\n  }\n}\n\nconst cachedPatterns: Map<PatternDefinition, Map</* fillStyle */string, CanvasPattern>> = new Map();\n\nfunction drawPatternChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: number[][],\n  xOffset: number,\n  yOffset: number,\n  deviceCellWidth: number,\n  deviceCellHeight: number\n): void {\n  let patternSet = cachedPatterns.get(charDefinition);\n  if (!patternSet) {\n    patternSet = new Map();\n    cachedPatterns.set(charDefinition, patternSet);\n  }\n  const fillStyle = ctx.fillStyle;\n  if (typeof fillStyle !== 'string') {\n    throw new Error(`Unexpected fillStyle type \"${fillStyle}\"`);\n  }\n  let pattern = patternSet.get(fillStyle);\n  if (!pattern) {\n    const width = charDefinition[0].length;\n    const height = charDefinition.length;\n    const tmpCanvas = ctx.canvas.ownerDocument.createElement('canvas');\n    tmpCanvas.width = width;\n    tmpCanvas.height = height;\n    const tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d'));\n    const imageData = new ImageData(width, height);\n\n    // Extract rgba from fillStyle\n    let r: number;\n    let g: number;\n    let b: number;\n    let a: number;\n    if (fillStyle.startsWith('#')) {\n      r = parseInt(fillStyle.slice(1, 3), 16);\n      g = parseInt(fillStyle.slice(3, 5), 16);\n      b = parseInt(fillStyle.slice(5, 7), 16);\n      a = fillStyle.length > 7 && parseInt(fillStyle.slice(7, 9), 16) || 1;\n    } else if (fillStyle.startsWith('rgba')) {\n      ([r, g, b, a] = fillStyle.substring(5, fillStyle.length - 1).split(',').map(e => parseFloat(e)));\n    } else {\n      throw new Error(`Unexpected fillStyle color format \"${fillStyle}\" when drawing pattern glyph`);\n    }\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        imageData.data[(y * width + x) * 4    ] = r;\n        imageData.data[(y * width + x) * 4 + 1] = g;\n        imageData.data[(y * width + x) * 4 + 2] = b;\n        imageData.data[(y * width + x) * 4 + 3] = charDefinition[y][x] * (a * 255);\n      }\n    }\n    tmpCtx.putImageData(imageData, 0, 0);\n    pattern = throwIfFalsy(ctx.createPattern(tmpCanvas, null));\n    patternSet.set(fillStyle, pattern);\n  }\n  ctx.fillStyle = pattern;\n  ctx.fillRect(xOffset, yOffset, deviceCellWidth, deviceCellHeight);\n}\n\n/**\n * Draws the following box drawing characters by mapping a subset of SVG d attribute instructions to\n * canvas draw calls.\n *\n * Box styles:       ┎┰┒┍┯┑╓╥╖╒╤╕ ┏┳┓┌┲┓┌┬┐┏┱┐\n * ┌─┬─┐ ┏━┳━┓ ╔═╦═╗ ┠╂┨┝┿┥╟╫╢╞╪╡ ┡╇┩├╊┫┢╈┪┣╉┤\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┖┸┚┕┷┙╙╨╜╘╧╛ └┴┘└┺┛┗┻┛┗┹┘\n * ├─┼─┤ ┣━╋━┫ ╠═╬═╣ ┏┱┐┌┲┓┌┬┐┌┬┐ ┏┳┓┌┮┓┌┬┐┏┭┐\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┡╃┤├╄┩├╆┪┢╅┤ ┞╀┦├┾┫┟╁┧┣┽┤\n * └─┴─┘ ┗━┻━┛ ╚═╩═╝ └┴┘└┴┘└┺┛┗┹┘ └┴┘└┶┛┗┻┛┗┵┘\n *\n * Other:\n * ╭─╮ ╲ ╱ ╷╻╎╏┆┇┊┋ ╺╾╴ ╌╌╌ ┄┄┄ ┈┈┈\n * │ │  ╳  ╽╿╎╏┆┇┊┋ ╶╼╸ ╍╍╍ ┅┅┅ ┉┉┉\n * ╰─╯ ╱ ╲ ╹╵╎╏┆┇┊┋\n *\n * All box drawing characters:\n * ─ ━ │ ┃ ┄ ┅ ┆ ┇ ┈ ┉ ┊ ┋ ┌ ┍ ┎ ┏\n * ┐ ┑ ┒ ┓ └ ┕ ┖ ┗ ┘ ┙ ┚ ┛ ├ ┝ ┞ ┟\n * ┠ ┡ ┢ ┣ ┤ ┥ ┦ ┧ ┨ ┩ ┪ ┫ ┬ ┭ ┮ ┯\n * ┰ ┱ ┲ ┳ ┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻ ┼ ┽ ┾ ┿\n * ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ╌ ╍ ╎ ╏\n * ═ ║ ╒ ╓ ╔ ╕ ╖ ╗ ╘ ╙ ╚ ╛ ╜ ╝ ╞ ╟\n * ╠ ╡ ╢ ╣ ╤ ╥ ╦ ╧ ╨ ╩ ╪ ╫ ╬ ╭ ╮ ╯\n * ╰ ╱ ╲ ╳ ╴ ╵ ╶ ╷ ╸ ╹ ╺ ╻ ╼ ╽ ╾ ╿\n *\n * ---\n *\n * Box drawing alignment tests:                                          █\n *                                                                       ▉\n *   ╔══╦══╗  ┌──┬──┐  ╭──┬──╮  ╭──┬──╮  ┏━━┳━━┓  ┎┒┏┑   ╷  ╻ ┏┯┓ ┌┰┐    ▊ ╱╲╱╲╳╳╳\n *   ║┌─╨─┐║  │╔═╧═╗│  │╒═╪═╕│  │╓─╁─╖│  ┃┌─╂─┐┃  ┗╃╄┙  ╶┼╴╺╋╸┠┼┨ ┝╋┥    ▋ ╲╱╲╱╳╳╳\n *   ║│╲ ╱│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╿ │┃  ┍╅╆┓   ╵  ╹ ┗┷┛ └┸┘    ▌ ╱╲╱╲╳╳╳\n *   ╠╡ ╳ ╞╣  ├╢   ╟┤  ├┼─┼─┼┤  ├╫─╂─╫┤  ┣┿╾┼╼┿┫  ┕┛┖┚     ┌┄┄┐ ╎ ┏┅┅┓ ┋ ▍ ╲╱╲╱╳╳╳\n *   ║│╱ ╲│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╽ │┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▎\n *   ║└─╥─┘║  │╚═╤═╝│  │╘═╪═╛│  │╙─╀─╜│  ┃└─╂─┘┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▏\n *   ╚══╩══╝  └──┴──┘  ╰──┴──╯  ╰──┴──╯  ┗━━┻━━┛           └╌╌┘ ╎ ┗╍╍┛ ┋  ▁▂▃▄▅▆▇█\n *\n * Source: https://www.w3.org/2001/06/utf-8-test/UTF-8-demo.html\n */\nfunction drawBoxDrawingChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: { [fontWeight: number]: string | ((xp: number, yp: number) => string) },\n  xOffset: number,\n  yOffset: number,\n  deviceCellWidth: number,\n  deviceCellHeight: number,\n  devicePixelRatio: number\n): void {\n  ctx.strokeStyle = ctx.fillStyle;\n  for (const [fontWeight, instructions] of Object.entries(charDefinition)) {\n    ctx.beginPath();\n    ctx.lineWidth = devicePixelRatio * Number.parseInt(fontWeight);\n    let actualInstructions: string;\n    if (typeof instructions === 'function') {\n      const xp = .15;\n      const yp = .15 / deviceCellHeight * deviceCellWidth;\n      actualInstructions = instructions(xp, yp);\n    } else {\n      actualInstructions = instructions;\n    }\n    for (const instruction of actualInstructions.split(' ')) {\n      const type = instruction[0];\n      const f = svgToCanvasInstructionMap[type];\n      if (!f) {\n        console.error(`Could not find drawing instructions for \"${type}\"`);\n        continue;\n      }\n      const args: string[] = instruction.substring(1).split(',');\n      if (!args[0] || !args[1]) {\n        continue;\n      }\n      f(ctx, translateArgs(args, deviceCellWidth, deviceCellHeight, xOffset, yOffset, true, devicePixelRatio));\n    }\n    ctx.stroke();\n    ctx.closePath();\n  }\n}\n\nfunction drawPowerlineChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IVectorShape,\n  xOffset: number,\n  yOffset: number,\n  deviceCellWidth: number,\n  deviceCellHeight: number,\n  fontSize: number,\n  devicePixelRatio: number\n): void {\n  // Clip the cell to make sure drawing doesn't occur beyond bounds\n  const clipRegion = new Path2D();\n  clipRegion.rect(xOffset, yOffset, deviceCellWidth, deviceCellHeight);\n  ctx.clip(clipRegion);\n\n  ctx.beginPath();\n  // Scale the stroke with DPR and font size\n  const cssLineWidth = fontSize / 12;\n  ctx.lineWidth = devicePixelRatio * cssLineWidth;\n  for (const instruction of charDefinition.d.split(' ')) {\n    const type = instruction[0];\n    const f = svgToCanvasInstructionMap[type];\n    if (!f) {\n      console.error(`Could not find drawing instructions for \"${type}\"`);\n      continue;\n    }\n    const args: string[] = instruction.substring(1).split(',');\n    if (!args[0] || !args[1]) {\n      continue;\n    }\n    f(ctx, translateArgs(\n      args,\n      deviceCellWidth,\n      deviceCellHeight,\n      xOffset,\n      yOffset,\n      false,\n      devicePixelRatio,\n      (charDefinition.leftPadding ?? 0) * (cssLineWidth / 2),\n      (charDefinition.rightPadding ?? 0) * (cssLineWidth / 2)\n    ));\n  }\n  if (charDefinition.type === VectorType.STROKE) {\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.stroke();\n  } else {\n    ctx.fill();\n  }\n  ctx.closePath();\n}\n\nfunction clamp(value: number, max: number, min: number = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nconst svgToCanvasInstructionMap: { [index: string]: any } = {\n  'C': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.bezierCurveTo(args[0], args[1], args[2], args[3], args[4], args[5]),\n  'L': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.lineTo(args[0], args[1]),\n  'M': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.moveTo(args[0], args[1])\n};\n\nfunction translateArgs(args: string[], cellWidth: number, cellHeight: number, xOffset: number, yOffset: number, doClamp: boolean, devicePixelRatio: number, leftPadding: number = 0, rightPadding: number = 0): number[] {\n  const result = args.map(e => parseFloat(e) || parseInt(e));\n\n  if (result.length < 2) {\n    throw new Error('Too few arguments for instruction');\n  }\n\n  for (let x = 0; x < result.length; x += 2) {\n    // Translate from 0-1 to 0-cellWidth\n    result[x] *= cellWidth - (leftPadding * devicePixelRatio) - (rightPadding * devicePixelRatio);\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (doClamp && result[x] !== 0) {\n      result[x] = clamp(Math.round(result[x] + 0.5) - 0.5, cellWidth, 0);\n    }\n    // Apply the cell's offset (ie. x*cellWidth)\n    result[x] += xOffset + (leftPadding * devicePixelRatio);\n  }\n\n  for (let y = 1; y < result.length; y += 2) {\n    // Translate from 0-1 to 0-cellHeight\n    result[y] *= cellHeight;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (doClamp && result[y] !== 0) {\n      result[y] = clamp(Math.round(result[y] + 0.5) - 0.5, cellHeight, 0);\n    }\n    // Apply the cell's offset (ie. x*cellHeight)\n    result[y] += yOffset;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\n\nexport function observeDevicePixelDimensions(element: HTMLElement, parentWindow: Window & typeof globalThis, callback: (deviceWidth: number, deviceHeight: number) => void): IDisposable {\n  // Observe any resizes to the element and extract the actual pixel size of the element if the\n  // devicePixelContentBoxSize API is supported. This allows correcting rounding errors when\n  // converting between CSS pixels and device pixels which causes blurry rendering when device\n  // pixel ratio is not a round number.\n  let observer: ResizeObserver | undefined = new parentWindow.ResizeObserver((entries) => {\n    const entry = entries.find((entry) => entry.target === element);\n    if (!entry) {\n      return;\n    }\n\n    // Disconnect if devicePixelContentBoxSize isn't supported by the browser\n    if (!('devicePixelContentBoxSize' in entry)) {\n      observer?.disconnect();\n      observer = undefined;\n      return;\n    }\n\n    // Fire the callback, ignore events where the dimensions are 0x0 as the canvas is likely hidden\n    const width = entry.devicePixelContentBoxSize[0].inlineSize;\n    const height = entry.devicePixelContentBoxSize[0].blockSize;\n    if (width > 0 && height > 0) {\n      callback(width, height);\n    }\n  });\n  try {\n    observer.observe(element, { box: ['device-pixel-content-box'] } as any);\n  } catch {\n    observer.disconnect();\n    observer = undefined;\n  }\n  return toDisposable(() => observer?.disconnect());\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isNerdFontGlyph(codepoint: number): boolean {\n  return 0xE000 <= codepoint && codepoint <= 0xF8FF;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function isEmoji(codepoint: number): boolean {\n  return (\n    codepoint >= 0x1F600 && codepoint <= 0x1F64F || // Emoticons\n    codepoint >= 0x1F300 && codepoint <= 0x1F5FF || // Misc Symbols and Pictographs\n    codepoint >= 0x1F680 && codepoint <= 0x1F6FF || // Transport and Map\n    codepoint >= 0x2600  && codepoint <= 0x26FF  || // Misc symbols\n    codepoint >= 0x2700  && codepoint <= 0x27BF  || // Dingbats\n    codepoint >= 0xFE00  && codepoint <= 0xFE0F  || // Variation Selectors\n    codepoint >= 0x1F900 && codepoint <= 0x1F9FF || // Supplemental Symbols and Pictographs\n    codepoint >= 0x1F1E6 && codepoint <= 0x1F1FF\n  );\n}\n\nexport function allowRescaling(codepoint: number | undefined, width: number, glyphSizeX: number, deviceCellWidth: number): boolean {\n  return (\n    // Is single cell width\n    width === 1 &&\n    // Glyph exceeds cell bounds, add 50% to avoid hurting readability by rescaling glyphs that\n    // barely overlap\n    glyphSizeX > Math.ceil(deviceCellWidth * 1.5) &&\n    // Never rescale ascii\n    codepoint !== undefined && codepoint > 0xFF &&\n    // Never rescale emoji\n    !isEmoji(codepoint) &&\n    // Never rescale powerline or nerd fonts\n    !isPowerlineGlyph(codepoint) && !isNerdFontGlyph(codepoint)\n  );\n}\n\nexport function treatGlyphAsBackgroundColor(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n\nexport function computeNextVariantOffset(cellWidth: number, lineWidth: number, currentOffset: number = 0): number {\n  return (cellWidth - (Math.round(lineWidth) * 2 - currentOffset)) % (Math.round(lineWidth) * 2);\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal } from 'browser/Types';\nimport { ISelectionRenderModel } from 'browser/renderer/shared/Types';\nimport { Terminal } from '@xterm/xterm';\n\nclass SelectionRenderModel implements ISelectionRenderModel {\n  public hasSelection!: boolean;\n  public columnSelectMode!: boolean;\n  public viewportStartRow!: number;\n  public viewportEndRow!: number;\n  public viewportCappedStartRow!: number;\n  public viewportCappedEndRow!: number;\n  public startCol!: number;\n  public endCol!: number;\n  public selectionStart: [number, number] | undefined;\n  public selectionEnd: [number, number] | undefined;\n\n  constructor() {\n    this.clear();\n  }\n\n  public clear(): void {\n    this.hasSelection = false;\n    this.columnSelectMode = false;\n    this.viewportStartRow = 0;\n    this.viewportEndRow = 0;\n    this.viewportCappedStartRow = 0;\n    this.viewportCappedEndRow = 0;\n    this.startCol = 0;\n    this.endCol = 0;\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n  }\n\n  public update(terminal: ITerminal, start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this.selectionStart = start;\n    this.selectionEnd = end;\n    // Selection does not exist\n    if (!start || !end || (start[0] === end[0] && start[1] === end[1])) {\n      this.clear();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportY = terminal.buffers.active.ydisp;\n    const viewportStartRow = start[1] - viewportY;\n    const viewportEndRow = end[1] - viewportY;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, terminal.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= terminal.rows || viewportCappedEndRow < 0) {\n      this.clear();\n      return;\n    }\n\n    this.hasSelection = true;\n    this.columnSelectMode = columnSelectMode;\n    this.viewportStartRow = viewportStartRow;\n    this.viewportEndRow = viewportEndRow;\n    this.viewportCappedStartRow = viewportCappedStartRow;\n    this.viewportCappedEndRow = viewportCappedEndRow;\n    this.startCol = start[0];\n    this.endCol = end[0];\n  }\n\n  public isCellSelected(terminal: Terminal, x: number, y: number): boolean {\n    if (!this.hasSelection) {\n      return false;\n    }\n    y -= terminal.buffer.active.viewportY;\n    if (this.columnSelectMode) {\n      if (this.startCol <= this.endCol) {\n        return x >= this.startCol && y >= this.viewportCappedStartRow &&\n          x < this.endCol && y <= this.viewportCappedEndRow;\n      }\n      return x < this.startCol && y >= this.viewportCappedStartRow &&\n        x >= this.endCol && y <= this.viewportCappedEndRow;\n    }\n    return (y > this.viewportStartRow && y < this.viewportEndRow) ||\n      (this.viewportStartRow === this.viewportEndRow && y === this.viewportStartRow && x >= this.startCol && x < this.endCol) ||\n      (this.viewportStartRow < this.viewportEndRow && y === this.viewportEndRow && x < this.endCol) ||\n      (this.viewportStartRow < this.viewportEndRow && y === this.viewportStartRow && x >= this.startCol);\n  }\n}\n\nexport function createSelectionRenderModel(): ISelectionRenderModel {\n  return new SelectionRenderModel();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { DIM_OPACITY, TEXT_BASELINE } from 'browser/renderer/shared/Constants';\nimport { tryDrawCustomChar } from 'browser/renderer/shared/CustomGlyphs';\nimport { computeNextVariantOffset, treatGlyphAsBackgroundColor, isPowerlineGlyph, isRestrictedPowerlineGlyph, throwIfFalsy } from 'browser/renderer/shared/RendererUtils';\nimport { IBoundingBox, ICharAtlasConfig, IRasterizedGlyph, ITextureAtlas } from 'browser/renderer/shared/Types';\nimport { NULL_COLOR, channels, color, rgba } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { FourKeyMap } from 'common/MultiKeyMap';\nimport { IdleTaskQueue } from 'common/TaskQueue';\nimport { IColor } from 'common/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { Attributes, DEFAULT_COLOR, DEFAULT_EXT, UnderlineStyle } from 'common/buffer/Constants';\nimport { IUnicodeService } from 'common/services/Services';\n\n/**\n * A shared object which is used to draw nothing for a particular cell.\n */\nconst NULL_RASTERIZED_GLYPH: IRasterizedGlyph = {\n  texturePage: 0,\n  texturePosition: { x: 0, y: 0 },\n  texturePositionClipSpace: { x: 0, y: 0 },\n  offset: { x: 0, y: 0 },\n  size: { x: 0, y: 0 },\n  sizeClipSpace: { x: 0, y: 0 }\n};\n\nconst TMP_CANVAS_GLYPH_PADDING = 2;\n\nconst enum Constants {\n  /**\n   * The amount of pixel padding to allow in each row. Setting this to zero would make the atlas\n   * page pack as tightly as possible, but more pages would end up being created as a result.\n   */\n  ROW_PIXEL_THRESHOLD = 2,\n  /**\n   * The maximum texture size regardless of what the actual hardware maximum turns out to be. This\n   * is enforced to ensure uploading the texture still finishes in a reasonable amount of time. A\n   * 4096 squared image takes up 16MB of GPU memory.\n   */\n  FORCED_MAX_TEXTURE_SIZE = 4096\n}\n\ninterface ICharAtlasActiveRow {\n  x: number;\n  y: number;\n  height: number;\n}\n\n// Work variables to avoid garbage collection\nlet $glyph = undefined;\n\nexport class TextureAtlas implements ITextureAtlas {\n  private _didWarmUp: boolean = false;\n\n  private _cacheMap: FourKeyMap<number, number, number, number, IRasterizedGlyph> = new FourKeyMap();\n  private _cacheMapCombined: FourKeyMap<string, number, number, number, IRasterizedGlyph> = new FourKeyMap();\n\n  // The texture that the atlas is drawn to\n  private _pages: AtlasPage[] = [];\n  public get pages(): { canvas: HTMLCanvasElement, version: number }[] { return this._pages; }\n\n  // The set of atlas pages that can be written to\n  private _activePages: AtlasPage[] = [];\n\n  private _tmpCanvas: HTMLCanvasElement;\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  private _workBoundingBox: IBoundingBox = { top: 0, left: 0, bottom: 0, right: 0 };\n  private _workAttributeData: AttributeData = new AttributeData();\n\n  private _textureSize: number = 512;\n\n  public static maxAtlasPages: number | undefined;\n  public static maxTextureSize: number | undefined;\n\n  private readonly _onAddTextureAtlasCanvas = new EventEmitter<HTMLCanvasElement>();\n  public readonly onAddTextureAtlasCanvas = this._onAddTextureAtlasCanvas.event;\n  private readonly _onRemoveTextureAtlasCanvas = new EventEmitter<HTMLCanvasElement>();\n  public readonly onRemoveTextureAtlasCanvas = this._onRemoveTextureAtlasCanvas.event;\n\n  constructor(\n    private readonly _document: Document,\n    private readonly _config: ICharAtlasConfig,\n    private readonly _unicodeService: IUnicodeService\n  ) {\n    this._createNewPage();\n    this._tmpCanvas = createCanvas(\n      _document,\n      this._config.deviceCellWidth * 4 + TMP_CANVAS_GLYPH_PADDING * 2,\n      this._config.deviceCellHeight + TMP_CANVAS_GLYPH_PADDING * 2\n    );\n    this._tmpCtx = throwIfFalsy(this._tmpCanvas.getContext('2d', {\n      alpha: this._config.allowTransparency,\n      willReadFrequently: true\n    }));\n  }\n\n  public dispose(): void {\n    for (const page of this.pages) {\n      page.canvas.remove();\n    }\n    this._onAddTextureAtlasCanvas.dispose();\n  }\n\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  private _doWarmUp(): void {\n    // Pre-fill with ASCII 33-126, this is not urgent and done in idle callbacks\n    const queue = new IdleTaskQueue();\n    for (let i = 33; i < 126; i++) {\n      queue.enqueue(() => {\n        if (!this._cacheMap.get(i, DEFAULT_COLOR, DEFAULT_COLOR, DEFAULT_EXT)) {\n          const rasterizedGlyph = this._drawToCache(i, DEFAULT_COLOR, DEFAULT_COLOR, DEFAULT_EXT);\n          this._cacheMap.set(i, DEFAULT_COLOR, DEFAULT_COLOR, DEFAULT_EXT, rasterizedGlyph);\n        }\n      });\n    }\n  }\n\n  private _requestClearModel = false;\n  public beginFrame(): boolean {\n    return this._requestClearModel;\n  }\n\n  public clearTexture(): void {\n    if (this._pages[0].currentRow.x === 0 && this._pages[0].currentRow.y === 0) {\n      return;\n    }\n    for (const page of this._pages) {\n      page.clear();\n    }\n    this._cacheMap.clear();\n    this._cacheMapCombined.clear();\n    this._didWarmUp = false;\n  }\n\n  private _createNewPage(): AtlasPage {\n    // Try merge the set of the 4 most used pages of the largest size. This is is deferred to a\n    // microtask to ensure it does not interrupt textures that will be rendered in the current\n    // animation frame which would result in blank rendered areas. This is actually not that\n    // expensive relative to drawing the glyphs, so there is no need to wait for an idle callback.\n    if (TextureAtlas.maxAtlasPages && this._pages.length >= Math.max(4, TextureAtlas.maxAtlasPages)) {\n      // Find the set of the largest 4 images, below the maximum size, with the highest\n      // percentages used\n      const pagesBySize = this._pages.filter(e => {\n        return e.canvas.width * 2 <= (TextureAtlas.maxTextureSize || Constants.FORCED_MAX_TEXTURE_SIZE);\n      }).sort((a, b) => {\n        if (b.canvas.width !== a.canvas.width) {\n          return b.canvas.width - a.canvas.width;\n        }\n        return b.percentageUsed - a.percentageUsed;\n      });\n      let sameSizeI = -1;\n      let size = 0;\n      for (let i = 0; i < pagesBySize.length; i++) {\n        if (pagesBySize[i].canvas.width !== size) {\n          sameSizeI = i;\n          size = pagesBySize[i].canvas.width;\n        } else if (i - sameSizeI === 3) {\n          break;\n        }\n      }\n\n      // Gather details of the merge\n      const mergingPages = pagesBySize.slice(sameSizeI, sameSizeI + 4);\n      const sortedMergingPagesIndexes = mergingPages.map(e => e.glyphs[0].texturePage).sort((a, b) => a > b ? 1 : -1);\n      const mergedPageIndex = this.pages.length - mergingPages.length;\n\n      // Merge into the new page\n      const mergedPage = this._mergePages(mergingPages, mergedPageIndex);\n      mergedPage.version++;\n\n      // Delete the pages, shifting glyph texture pages as needed\n      for (let i = sortedMergingPagesIndexes.length - 1; i >= 0; i--) {\n        this._deletePage(sortedMergingPagesIndexes[i]);\n      }\n\n      // Add the new merged page to the end\n      this.pages.push(mergedPage);\n\n      // Request the model to be cleared to refresh all texture pages.\n      this._requestClearModel = true;\n      this._onAddTextureAtlasCanvas.fire(mergedPage.canvas);\n    }\n\n    // All new atlas pages are created small as they are highly dynamic\n    const newPage = new AtlasPage(this._document, this._textureSize);\n    this._pages.push(newPage);\n    this._activePages.push(newPage);\n    this._onAddTextureAtlasCanvas.fire(newPage.canvas);\n    return newPage;\n  }\n\n  private _mergePages(mergingPages: AtlasPage[], mergedPageIndex: number): AtlasPage {\n    const mergedSize = mergingPages[0].canvas.width * 2;\n    const mergedPage = new AtlasPage(this._document, mergedSize, mergingPages);\n    for (const [i, p] of mergingPages.entries()) {\n      const xOffset = i * p.canvas.width % mergedSize;\n      const yOffset = Math.floor(i / 2) * p.canvas.height;\n      mergedPage.ctx.drawImage(p.canvas, xOffset, yOffset);\n      for (const g of p.glyphs) {\n        g.texturePage = mergedPageIndex;\n        g.sizeClipSpace.x = g.size.x / mergedSize;\n        g.sizeClipSpace.y = g.size.y / mergedSize;\n        g.texturePosition.x += xOffset;\n        g.texturePosition.y += yOffset;\n        g.texturePositionClipSpace.x = g.texturePosition.x / mergedSize;\n        g.texturePositionClipSpace.y = g.texturePosition.y / mergedSize;\n      }\n\n      this._onRemoveTextureAtlasCanvas.fire(p.canvas);\n\n      // Remove the merging page from active pages if it was there\n      const index = this._activePages.indexOf(p);\n      if (index !== -1) {\n        this._activePages.splice(index, 1);\n      }\n    }\n    return mergedPage;\n  }\n\n  private _deletePage(pageIndex: number): void {\n    this._pages.splice(pageIndex, 1);\n    for (let j = pageIndex; j < this._pages.length; j++) {\n      const adjustingPage = this._pages[j];\n      for (const g of adjustingPage.glyphs) {\n        g.texturePage--;\n      }\n      adjustingPage.version++;\n    }\n  }\n\n  public getRasterizedGlyphCombinedChar(chars: string, bg: number, fg: number, ext: number, restrictToCellHeight: boolean): IRasterizedGlyph {\n    return this._getFromCacheMap(this._cacheMapCombined, chars, bg, fg, ext, restrictToCellHeight);\n  }\n\n  public getRasterizedGlyph(code: number, bg: number, fg: number, ext: number, restrictToCellHeight: boolean): IRasterizedGlyph {\n    return this._getFromCacheMap(this._cacheMap, code, bg, fg, ext, restrictToCellHeight);\n  }\n\n  /**\n   * Gets the glyphs texture coords, drawing the texture if it's not already\n   */\n  private _getFromCacheMap(\n    cacheMap: FourKeyMap<string | number, number, number, number, IRasterizedGlyph>,\n    key: string | number,\n    bg: number,\n    fg: number,\n    ext: number,\n    restrictToCellHeight: boolean = false\n  ): IRasterizedGlyph {\n    $glyph = cacheMap.get(key, bg, fg, ext);\n    if (!$glyph) {\n      $glyph = this._drawToCache(key, bg, fg, ext, restrictToCellHeight);\n      cacheMap.set(key, bg, fg, ext, $glyph);\n    }\n    return $glyph;\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx >= this._config.colors.ansi.length) {\n      throw new Error('No color found for idx ' + idx);\n    }\n    return this._config.colors.ansi[idx];\n  }\n\n  private _getBackgroundColor(bgColorMode: number, bgColor: number, inverse: boolean, dim: boolean): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return NULL_COLOR;\n    }\n\n    let result: IColor;\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        result = this._getColorFromAnsiIndex(bgColor);\n        break;\n      case Attributes.CM_RGB:\n        const arr = AttributeData.toColorRGB(bgColor);\n        result = channels.toColor(arr[0], arr[1], arr[2]);\n        break;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          result = color.opaque(this._config.colors.foreground);\n        } else {\n          result = this._config.colors.background;\n        }\n        break;\n    }\n\n    return result;\n  }\n\n  private _getForegroundColor(bg: number, bgColorMode: number, bgColor: number, fg: number, fgColorMode: number, fgColor: number, inverse: boolean, dim: boolean, bold: boolean, excludeFromContrastRatioDemands: boolean): IColor {\n    const minimumContrastColor = this._getMinimumContrastColor(bg, bgColorMode, bgColor, fg, fgColorMode, fgColor, inverse, bold, dim, excludeFromContrastRatioDemands);\n    if (minimumContrastColor) {\n      return minimumContrastColor;\n    }\n\n    let result: IColor;\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._config.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        result = this._getColorFromAnsiIndex(fgColor);\n        break;\n      case Attributes.CM_RGB:\n        const arr = AttributeData.toColorRGB(fgColor);\n        result = channels.toColor(arr[0], arr[1], arr[2]);\n        break;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          result = this._config.colors.background;\n        } else {\n          result = this._config.colors.foreground;\n        }\n    }\n\n    // Always use an opaque color regardless of allowTransparency\n    if (this._config.allowTransparency) {\n      result = color.opaque(result);\n    }\n\n    // Apply dim to the color, opacity is fine to use for the foreground color\n    if (dim) {\n      result = color.multiplyOpacity(result, DIM_OPACITY);\n    }\n\n    return result;\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._getColorFromAnsiIndex(bgColor).rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._config.colors.foreground.rgba;\n        }\n        return this._config.colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._config.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._getColorFromAnsiIndex(fgColor).rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._config.colors.background.rgba;\n        }\n        return this._config.colors.foreground.rgba;\n    }\n  }\n\n  private _getMinimumContrastColor(bg: number, bgColorMode: number, bgColor: number, fg: number, fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean, dim: boolean, excludeFromContrastRatioDemands: boolean): IColor | undefined {\n    if (this._config.minimumContrastRatio === 1 || excludeFromContrastRatioDemands) {\n      return undefined;\n    }\n\n    // Try get from cache first\n    const cache = this._getContrastCache(dim);\n    const adjustedColor = cache.getColor(bg, fg);\n    if (adjustedColor !== undefined) {\n      return adjustedColor || undefined;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgColorMode, bgColor, inverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, inverse, bold);\n    // Dim cells only require half the contrast, otherwise they wouldn't be distinguishable from\n    // non-dim cells\n    const result = rgba.ensureContrastRatio(bgRgba, fgRgba, this._config.minimumContrastRatio / (dim ? 2 : 1));\n\n    if (!result) {\n      cache.setColor(bg, fg, null);\n      return undefined;\n    }\n\n    const color = channels.toColor(\n      (result >> 24) & 0xFF,\n      (result >> 16) & 0xFF,\n      (result >> 8) & 0xFF\n    );\n    cache.setColor(bg, fg, color);\n\n    return color;\n  }\n\n  private _getContrastCache(dim: boolean): IColorContrastCache {\n    if (dim) {\n      return this._config.colors.halfContrastCache;\n    }\n    return this._config.colors.contrastCache;\n  }\n\n  private _drawToCache(codeOrChars: number | string, bg: number, fg: number, ext: number, restrictToCellHeight: boolean = false): IRasterizedGlyph {\n    const chars = typeof codeOrChars === 'number' ? String.fromCharCode(codeOrChars) : codeOrChars;\n\n    // Uncomment for debugging\n    // console.log(`draw to cache \"${chars}\"`, bg, fg, ext);\n\n    // Allow 1 cell width per character, with a minimum of 2 (CJK), plus some padding. This is used\n    // to draw the glyph to the canvas as well as to restrict the bounding box search to ensure\n    // giant ligatures (eg. =====>) don't impact overall performance.\n    const allowedWidth = Math.min(this._config.deviceCellWidth * Math.max(chars.length, 2) + TMP_CANVAS_GLYPH_PADDING * 2, this._textureSize);\n    if (this._tmpCanvas.width < allowedWidth) {\n      this._tmpCanvas.width = allowedWidth;\n    }\n    // Include line height when drawing glyphs\n    const allowedHeight = Math.min(this._config.deviceCellHeight + TMP_CANVAS_GLYPH_PADDING * 4, this._textureSize);\n    if (this._tmpCanvas.height < allowedHeight) {\n      this._tmpCanvas.height = allowedHeight;\n    }\n    this._tmpCtx.save();\n\n    this._workAttributeData.fg = fg;\n    this._workAttributeData.bg = bg;\n    this._workAttributeData.extended.ext = ext;\n\n    const invisible = !!this._workAttributeData.isInvisible();\n    if (invisible) {\n      return NULL_RASTERIZED_GLYPH;\n    }\n\n    const bold = !!this._workAttributeData.isBold();\n    const inverse = !!this._workAttributeData.isInverse();\n    const dim = !!this._workAttributeData.isDim();\n    const italic = !!this._workAttributeData.isItalic();\n    const underline = !!this._workAttributeData.isUnderline();\n    const strikethrough = !!this._workAttributeData.isStrikethrough();\n    const overline = !!this._workAttributeData.isOverline();\n    let fgColor = this._workAttributeData.getFgColor();\n    let fgColorMode = this._workAttributeData.getFgColorMode();\n    let bgColor = this._workAttributeData.getBgColor();\n    let bgColorMode = this._workAttributeData.getBgColorMode();\n    if (inverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(bgColorMode, bgColor, inverse, dim);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha,\n    // regardless of transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._tmpCanvas.width, this._tmpCanvas.height);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = TEXT_BASELINE;\n\n    const powerlineGlyph = chars.length === 1 && isPowerlineGlyph(chars.charCodeAt(0));\n    const restrictedPowerlineGlyph = chars.length === 1 && isRestrictedPowerlineGlyph(chars.charCodeAt(0));\n    const foregroundColor = this._getForegroundColor(bg, bgColorMode, bgColor, fg, fgColorMode, fgColor, inverse, dim, bold, treatGlyphAsBackgroundColor(chars.charCodeAt(0)));\n    this._tmpCtx.fillStyle = foregroundColor.css;\n\n    // For powerline glyphs left/top padding is excluded (https://github.com/microsoft/vscode/issues/120129)\n    const padding = restrictedPowerlineGlyph ? 0 : TMP_CANVAS_GLYPH_PADDING * 2;\n\n    // Draw custom characters if applicable\n    let customGlyph = false;\n    if (this._config.customGlyphs !== false) {\n      customGlyph = tryDrawCustomChar(this._tmpCtx, chars, padding, padding, this._config.deviceCellWidth, this._config.deviceCellHeight, this._config.fontSize, this._config.devicePixelRatio);\n    }\n\n    // Whether to clear pixels based on a threshold difference between the glyph color and the\n    // background color. This should be disabled when the glyph contains multiple colors such as\n    // underline colors to prevent important colors could get cleared.\n    let enableClearThresholdCheck = !powerlineGlyph;\n\n    let chWidth: number;\n    if (typeof codeOrChars === 'number') {\n      chWidth = this._unicodeService.wcwidth(codeOrChars);\n    } else {\n      chWidth = this._unicodeService.getStringCellWidth(codeOrChars);\n    }\n\n    // Draw underline\n    if (underline) {\n      this._tmpCtx.save();\n      const lineWidth = Math.max(1, Math.floor(this._config.fontSize * this._config.devicePixelRatio / 15));\n      // When the line width is odd, draw at a 0.5 position\n      const yOffset = lineWidth % 2 === 1 ? 0.5 : 0;\n      this._tmpCtx.lineWidth = lineWidth;\n\n      // Underline color\n      if (this._workAttributeData.isUnderlineColorDefault()) {\n        this._tmpCtx.strokeStyle = this._tmpCtx.fillStyle;\n      } else if (this._workAttributeData.isUnderlineColorRGB()) {\n        enableClearThresholdCheck = false;\n        this._tmpCtx.strokeStyle = `rgb(${AttributeData.toColorRGB(this._workAttributeData.getUnderlineColor()).join(',')})`;\n      } else {\n        enableClearThresholdCheck = false;\n        let fg = this._workAttributeData.getUnderlineColor();\n        if (this._config.drawBoldTextInBrightColors && this._workAttributeData.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._tmpCtx.strokeStyle = this._getColorFromAnsiIndex(fg).css;\n      }\n\n      // Underline style/stroke\n      this._tmpCtx.beginPath();\n      const xLeft = padding;\n      const yTop = Math.ceil(padding + this._config.deviceCharHeight) - yOffset - (restrictToCellHeight ? lineWidth * 2 : 0);\n      const yMid = yTop + lineWidth;\n      const yBot = yTop + lineWidth * 2;\n      let nextOffset = this._workAttributeData.getUnderlineVariantOffset();\n\n      for (let i = 0; i < chWidth; i++) {\n        this._tmpCtx.save();\n        const xChLeft = xLeft + i * this._config.deviceCellWidth;\n        const xChRight = xLeft + (i + 1) * this._config.deviceCellWidth;\n        const xChMid = xChLeft + this._config.deviceCellWidth / 2;\n        switch (this._workAttributeData.extended.underlineStyle) {\n          case UnderlineStyle.DOUBLE:\n            this._tmpCtx.moveTo(xChLeft, yTop);\n            this._tmpCtx.lineTo(xChRight, yTop);\n            this._tmpCtx.moveTo(xChLeft, yBot);\n            this._tmpCtx.lineTo(xChRight, yBot);\n            break;\n          case UnderlineStyle.CURLY:\n            // Choose the bezier top and bottom based on the device pixel ratio, the curly line is\n            // made taller when the line width is  as otherwise it's not very clear otherwise.\n            const yCurlyBot = lineWidth <= 1 ? yBot : Math.ceil(padding + this._config.deviceCharHeight - lineWidth / 2) - yOffset;\n            const yCurlyTop = lineWidth <= 1 ? yTop : Math.ceil(padding + this._config.deviceCharHeight + lineWidth / 2) - yOffset;\n            // Clip the left and right edges of the underline such that it can be drawn just outside\n            // the edge of the cell to ensure a continuous stroke when there are multiple underlined\n            // glyphs adjacent to one another.\n            const clipRegion = new Path2D();\n            clipRegion.rect(xChLeft, yTop, this._config.deviceCellWidth, yBot - yTop);\n            this._tmpCtx.clip(clipRegion);\n            // Start 1/2 cell before and end 1/2 cells after to ensure a smooth curve with other\n            // cells\n            this._tmpCtx.moveTo(xChLeft - this._config.deviceCellWidth / 2, yMid);\n            this._tmpCtx.bezierCurveTo(\n              xChLeft - this._config.deviceCellWidth / 2, yCurlyTop,\n              xChLeft, yCurlyTop,\n              xChLeft, yMid\n            );\n            this._tmpCtx.bezierCurveTo(\n              xChLeft, yCurlyBot,\n              xChMid, yCurlyBot,\n              xChMid, yMid\n            );\n            this._tmpCtx.bezierCurveTo(\n              xChMid, yCurlyTop,\n              xChRight, yCurlyTop,\n              xChRight, yMid\n            );\n            this._tmpCtx.bezierCurveTo(\n              xChRight, yCurlyBot,\n              xChRight + this._config.deviceCellWidth / 2, yCurlyBot,\n              xChRight + this._config.deviceCellWidth / 2, yMid\n            );\n            break;\n          case UnderlineStyle.DOTTED:\n            const offsetWidth = nextOffset === 0 ? 0 :\n              (nextOffset >= lineWidth ? lineWidth * 2 - nextOffset : lineWidth - nextOffset);\n              // a line and a gap.\n            const isLineStart = nextOffset >= lineWidth ? false : true;\n            if (isLineStart === false || offsetWidth === 0) {\n              this._tmpCtx.setLineDash([Math.round(lineWidth), Math.round(lineWidth)]);\n              this._tmpCtx.moveTo(xChLeft + offsetWidth, yTop);\n              this._tmpCtx.lineTo(xChRight, yTop);\n            } else {\n              this._tmpCtx.setLineDash([Math.round(lineWidth), Math.round(lineWidth)]);\n              this._tmpCtx.moveTo(xChLeft, yTop);\n              this._tmpCtx.lineTo(xChLeft + offsetWidth, yTop);\n              this._tmpCtx.moveTo(xChLeft + offsetWidth + lineWidth, yTop);\n              this._tmpCtx.lineTo(xChRight, yTop);\n            }\n            nextOffset = computeNextVariantOffset(xChRight - xChLeft, lineWidth, nextOffset);\n            break;\n          case UnderlineStyle.DASHED:\n            const lineRatio = 0.6;\n            const gapRatio = 0.3;\n            // End line ratio is approximately equal to 0.1\n            const xChWidth = xChRight - xChLeft;\n            const line = Math.floor(lineRatio * xChWidth);\n            const gap = Math.floor(gapRatio * xChWidth);\n            const end = xChWidth - line - gap;\n            this._tmpCtx.setLineDash([line, gap, end]);\n            this._tmpCtx.moveTo(xChLeft, yTop);\n            this._tmpCtx.lineTo(xChRight, yTop);\n            break;\n          case UnderlineStyle.SINGLE:\n          default:\n            this._tmpCtx.moveTo(xChLeft, yTop);\n            this._tmpCtx.lineTo(xChRight, yTop);\n            break;\n        }\n        this._tmpCtx.stroke();\n        this._tmpCtx.restore();\n      }\n      this._tmpCtx.restore();\n\n      // Draw stroke in the background color for non custom characters in order to give an outline\n      // between the text and the underline. Only do this when font size is >= 12 as the underline\n      // looks odd when the font size is too small\n      if (!customGlyph && this._config.fontSize >= 12) {\n        // This only works when transparency is disabled because it's not clear how to clear stroked\n        // text\n        if (!this._config.allowTransparency && chars !== ' ') {\n          // Measure the text, only draw the stroke if there is a descent beyond an alphabetic text\n          // baseline\n          this._tmpCtx.save();\n          this._tmpCtx.textBaseline = 'alphabetic';\n          const metrics = this._tmpCtx.measureText(chars);\n          this._tmpCtx.restore();\n          if ('actualBoundingBoxDescent' in metrics && metrics.actualBoundingBoxDescent > 0) {\n            // This translates to 1/2 the line width in either direction\n            this._tmpCtx.save();\n            // Clip the region to only draw in valid pixels near the underline to avoid a slight\n            // outline around the whole glyph, as well as additional pixels in the glyph at the top\n            // which would increase GPU memory demands\n            const clipRegion = new Path2D();\n            clipRegion.rect(xLeft, yTop - Math.ceil(lineWidth / 2), this._config.deviceCellWidth * chWidth, yBot - yTop + Math.ceil(lineWidth / 2));\n            this._tmpCtx.clip(clipRegion);\n            this._tmpCtx.lineWidth = this._config.devicePixelRatio * 3;\n            this._tmpCtx.strokeStyle = backgroundColor.css;\n            this._tmpCtx.strokeText(chars, padding, padding + this._config.deviceCharHeight);\n            this._tmpCtx.restore();\n          }\n        }\n      }\n    }\n\n    // Overline\n    if (overline) {\n      const lineWidth = Math.max(1, Math.floor(this._config.fontSize * this._config.devicePixelRatio / 15));\n      const yOffset = lineWidth % 2 === 1 ? 0.5 : 0;\n      this._tmpCtx.lineWidth = lineWidth;\n      this._tmpCtx.strokeStyle = this._tmpCtx.fillStyle;\n      this._tmpCtx.beginPath();\n      this._tmpCtx.moveTo(padding, padding + yOffset);\n      this._tmpCtx.lineTo(padding + this._config.deviceCharWidth * chWidth, padding + yOffset);\n      this._tmpCtx.stroke();\n    }\n\n    // Draw the character\n    if (!customGlyph) {\n      this._tmpCtx.fillText(chars, padding, padding + this._config.deviceCharHeight);\n    }\n\n    // If this character is underscore and beyond the cell bounds, shift it up until it is visible\n    // even on the bottom row, try for a maximum of 5 pixels.\n    if (chars === '_' && !this._config.allowTransparency) {\n      let isBeyondCellBounds = clearColor(this._tmpCtx.getImageData(padding, padding, this._config.deviceCellWidth, this._config.deviceCellHeight), backgroundColor, foregroundColor, enableClearThresholdCheck);\n      if (isBeyondCellBounds) {\n        for (let offset = 1; offset <= 5; offset++) {\n          this._tmpCtx.save();\n          this._tmpCtx.fillStyle = backgroundColor.css;\n          this._tmpCtx.fillRect(0, 0, this._tmpCanvas.width, this._tmpCanvas.height);\n          this._tmpCtx.restore();\n          this._tmpCtx.fillText(chars, padding, padding + this._config.deviceCharHeight - offset);\n          isBeyondCellBounds = clearColor(this._tmpCtx.getImageData(padding, padding, this._config.deviceCellWidth, this._config.deviceCellHeight), backgroundColor, foregroundColor, enableClearThresholdCheck);\n          if (!isBeyondCellBounds) {\n            break;\n          }\n        }\n      }\n    }\n\n    // Draw strokethrough\n    if (strikethrough) {\n      const lineWidth = Math.max(1, Math.floor(this._config.fontSize * this._config.devicePixelRatio / 10));\n      const yOffset = this._tmpCtx.lineWidth % 2 === 1 ? 0.5 : 0; // When the width is odd, draw at 0.5 position\n      this._tmpCtx.lineWidth = lineWidth;\n      this._tmpCtx.strokeStyle = this._tmpCtx.fillStyle;\n      this._tmpCtx.beginPath();\n      this._tmpCtx.moveTo(padding, padding + Math.floor(this._config.deviceCharHeight / 2) - yOffset);\n      this._tmpCtx.lineTo(padding + this._config.deviceCharWidth * chWidth, padding + Math.floor(this._config.deviceCharHeight / 2) - yOffset);\n      this._tmpCtx.stroke();\n    }\n\n    this._tmpCtx.restore();\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    const imageData = this._tmpCtx.getImageData(\n      0, 0, this._tmpCanvas.width, this._tmpCanvas.height\n    );\n\n    // Clear out the background color and determine if the glyph is empty.\n    let isEmpty: boolean;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor, foregroundColor, enableClearThresholdCheck);\n    } else {\n      isEmpty = checkCompletelyTransparent(imageData);\n    }\n\n    // Handle empty glyphs\n    if (isEmpty) {\n      return NULL_RASTERIZED_GLYPH;\n    }\n\n    const rasterizedGlyph = this._findGlyphBoundingBox(imageData, this._workBoundingBox, allowedWidth, restrictedPowerlineGlyph, customGlyph, padding);\n\n    // Find the best atlas row to use\n    let activePage: AtlasPage;\n    let activeRow: ICharAtlasActiveRow;\n    while (true) {\n      // If there are no active pages (the last smallest 4 were merged), create a new one\n      if (this._activePages.length === 0) {\n        const newPage = this._createNewPage();\n        activePage = newPage;\n        activeRow = newPage.currentRow;\n        activeRow.height = rasterizedGlyph.size.y;\n        break;\n      }\n\n      // Get the best current row from all active pages\n      activePage = this._activePages[this._activePages.length - 1];\n      activeRow = activePage.currentRow;\n      for (const p of this._activePages) {\n        if (rasterizedGlyph.size.y <= p.currentRow.height) {\n          activePage = p;\n          activeRow = p.currentRow;\n        }\n      }\n\n      // TODO: This algorithm could be simplified:\n      // - Search for the page with ROW_PIXEL_THRESHOLD in mind\n      // - Keep track of current/fixed rows in a Map\n\n      // Replace the best current row with a fixed row if there is one at least as good as the\n      // current row. Search in reverse to prioritize filling in older pages.\n      for (let i = this._activePages.length - 1; i >= 0; i--) {\n        for (const row of this._activePages[i].fixedRows) {\n          if (row.height <= activeRow.height && rasterizedGlyph.size.y <= row.height) {\n            activePage = this._activePages[i];\n            activeRow = row;\n          }\n        }\n      }\n\n      // Create a new page if too much vertical space would be wasted or there is not enough room\n      // left in the page. The previous active row will become fixed in the process as it now has a\n      // fixed height\n      if (activeRow.y + rasterizedGlyph.size.y >= activePage.canvas.height || activeRow.height > rasterizedGlyph.size.y + Constants.ROW_PIXEL_THRESHOLD) {\n        // Create the new fixed height row, creating a new page if there isn't enough room on the\n        // current page\n        let wasPageAndRowFound = false;\n        if (activePage.currentRow.y + activePage.currentRow.height + rasterizedGlyph.size.y >= activePage.canvas.height) {\n          // Find the first page with room to create the new row on\n          let candidatePage: AtlasPage | undefined;\n          for (const p of this._activePages) {\n            if (p.currentRow.y + p.currentRow.height + rasterizedGlyph.size.y < p.canvas.height) {\n              candidatePage = p;\n              break;\n            }\n          }\n          if (candidatePage) {\n            activePage = candidatePage;\n          } else {\n            // Before creating a new atlas page that would trigger a page merge, check if the\n            // current active row is sufficient when ignoring the ROW_PIXEL_THRESHOLD. This will\n            // improve texture utilization by using the available space before the page is merged\n            // and becomes static.\n            if (\n              TextureAtlas.maxAtlasPages &&\n              this._pages.length >= TextureAtlas.maxAtlasPages &&\n              activeRow.y + rasterizedGlyph.size.y <= activePage.canvas.height &&\n              activeRow.height >= rasterizedGlyph.size.y &&\n              activeRow.x + rasterizedGlyph.size.x <= activePage.canvas.width\n            ) {\n              // activePage and activeRow is already valid\n              wasPageAndRowFound = true;\n            } else {\n              // Create a new page if there is no room\n              const newPage = this._createNewPage();\n              activePage = newPage;\n              activeRow = newPage.currentRow;\n              activeRow.height = rasterizedGlyph.size.y;\n              wasPageAndRowFound = true;\n            }\n          }\n        }\n        if (!wasPageAndRowFound) {\n          // Fix the current row as the new row is being added below\n          if (activePage.currentRow.height > 0) {\n            activePage.fixedRows.push(activePage.currentRow);\n          }\n          activeRow = {\n            x: 0,\n            y: activePage.currentRow.y + activePage.currentRow.height,\n            height: rasterizedGlyph.size.y\n          };\n          activePage.fixedRows.push(activeRow);\n\n          // Create the new current row below the new fixed height row\n          activePage.currentRow = {\n            x: 0,\n            y: activeRow.y + activeRow.height,\n            height: 0\n          };\n        }\n        // TODO: Remove pages from _activePages when all rows are filled\n      }\n\n      // Exit the loop if there is enough room in the row\n      if (activeRow.x + rasterizedGlyph.size.x <= activePage.canvas.width) {\n        break;\n      }\n\n      // If there is not enough room in the current row, finish it and try again\n      if (activeRow === activePage.currentRow) {\n        activeRow.x = 0;\n        activeRow.y += activeRow.height;\n        activeRow.height = 0;\n      } else {\n        activePage.fixedRows.splice(activePage.fixedRows.indexOf(activeRow), 1);\n      }\n    }\n\n    // Record texture position\n    rasterizedGlyph.texturePage = this._pages.indexOf(activePage);\n    rasterizedGlyph.texturePosition.x = activeRow.x;\n    rasterizedGlyph.texturePosition.y = activeRow.y;\n    rasterizedGlyph.texturePositionClipSpace.x = activeRow.x / activePage.canvas.width;\n    rasterizedGlyph.texturePositionClipSpace.y = activeRow.y / activePage.canvas.height;\n\n    // Fix the clipspace position as pages may be of differing size\n    rasterizedGlyph.sizeClipSpace.x /= activePage.canvas.width;\n    rasterizedGlyph.sizeClipSpace.y /= activePage.canvas.height;\n\n    // Update atlas current row, for fixed rows the glyph height will never be larger than the row\n    // height\n    activeRow.height = Math.max(activeRow.height, rasterizedGlyph.size.y);\n    activeRow.x += rasterizedGlyph.size.x;\n\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    activePage.ctx.putImageData(\n      imageData,\n      rasterizedGlyph.texturePosition.x - this._workBoundingBox.left,\n      rasterizedGlyph.texturePosition.y - this._workBoundingBox.top,\n      this._workBoundingBox.left,\n      this._workBoundingBox.top,\n      rasterizedGlyph.size.x,\n      rasterizedGlyph.size.y\n    );\n    activePage.addGlyph(rasterizedGlyph);\n    activePage.version++;\n\n    return rasterizedGlyph;\n  }\n\n  /**\n   * Given an ImageData object, find the bounding box of the non-transparent\n   * portion of the texture and return an IRasterizedGlyph with these\n   * dimensions.\n   * @param imageData The image data to read.\n   * @param boundingBox An IBoundingBox to put the clipped bounding box values.\n   */\n  private _findGlyphBoundingBox(imageData: ImageData, boundingBox: IBoundingBox, allowedWidth: number, restrictedGlyph: boolean, customGlyph: boolean, padding: number): IRasterizedGlyph {\n    boundingBox.top = 0;\n    const height = restrictedGlyph ? this._config.deviceCellHeight : this._tmpCanvas.height;\n    const width = restrictedGlyph ? this._config.deviceCellWidth : allowedWidth;\n    let found = false;\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.top = y;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    boundingBox.left = 0;\n    found = false;\n    for (let x = 0; x < padding + width; x++) {\n      for (let y = 0; y < height; y++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.left = x;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    boundingBox.right = width;\n    found = false;\n    for (let x = padding + width - 1; x >= padding; x--) {\n      for (let y = 0; y < height; y++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.right = x;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    boundingBox.bottom = height;\n    found = false;\n    for (let y = height - 1; y >= 0; y--) {\n      for (let x = 0; x < width; x++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.bottom = y;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    return {\n      texturePage: 0,\n      texturePosition: { x: 0, y: 0 },\n      texturePositionClipSpace: { x: 0, y: 0 },\n      size: {\n        x: boundingBox.right - boundingBox.left + 1,\n        y: boundingBox.bottom - boundingBox.top + 1\n      },\n      sizeClipSpace: {\n        x: (boundingBox.right - boundingBox.left + 1),\n        y: (boundingBox.bottom - boundingBox.top + 1)\n      },\n      offset: {\n        x: -boundingBox.left + padding + ((restrictedGlyph || customGlyph) ? Math.floor((this._config.deviceCellWidth - this._config.deviceCharWidth) / 2) : 0),\n        y: -boundingBox.top + padding + ((restrictedGlyph || customGlyph) ? this._config.lineHeight === 1 ? 0 : Math.round((this._config.deviceCellHeight - this._config.deviceCharHeight) / 2) : 0)\n      }\n    };\n  }\n}\n\nclass AtlasPage {\n  public readonly canvas: HTMLCanvasElement;\n  public readonly ctx: CanvasRenderingContext2D;\n\n  private _usedPixels: number = 0;\n  public get percentageUsed(): number { return this._usedPixels / (this.canvas.width * this.canvas.height); }\n\n  private readonly _glyphs: IRasterizedGlyph[] = [];\n  public get glyphs(): ReadonlyArray<IRasterizedGlyph> { return this._glyphs; }\n  public addGlyph(glyph: IRasterizedGlyph): void {\n    this._glyphs.push(glyph);\n    this._usedPixels += glyph.size.x * glyph.size.y;\n  }\n\n  /**\n   * Used to check whether the canvas of the atlas page has changed.\n   */\n  public version = 0;\n\n  // Texture atlas current positioning data. The texture packing strategy used is to fill from\n  // left-to-right and top-to-bottom. When the glyph being written is less than half of the current\n  // row's height, the following happens:\n  //\n  // - The current row becomes the fixed height row A\n  // - A new fixed height row B the exact size of the glyph is created below the current row\n  // - A new dynamic height current row is created below B\n  //\n  // This strategy does a good job preventing space being wasted for very short glyphs such as\n  // underscores, hyphens etc. or those with underlines rendered.\n  public currentRow: ICharAtlasActiveRow = {\n    x: 0,\n    y: 0,\n    height: 0\n  };\n  public readonly fixedRows: ICharAtlasActiveRow[] = [];\n\n  constructor(\n    document: Document,\n    size: number,\n    sourcePages?: AtlasPage[]\n  ) {\n    if (sourcePages) {\n      for (const p of sourcePages) {\n        this._glyphs.push(...p.glyphs);\n        this._usedPixels += p._usedPixels;\n      }\n    }\n    this.canvas = createCanvas(document, size, size);\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this.ctx = throwIfFalsy(this.canvas.getContext('2d', { alpha: true }));\n  }\n\n  public clear(): void {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.currentRow.x = 0;\n    this.currentRow.y = 0;\n    this.currentRow.height = 0;\n    this.fixedRows.length = 0;\n    this.version++;\n  }\n}\n\n/**\n * Makes a particular rgb color and colors that are nearly the same in an ImageData completely\n * transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, bg: IColor, fg: IColor, enableThresholdCheck: boolean): boolean {\n  // Get color channels\n  const r = bg.rgba >>> 24;\n  const g = bg.rgba >>> 16 & 0xFF;\n  const b = bg.rgba >>> 8 & 0xFF;\n  const fgR = fg.rgba >>> 24;\n  const fgG = fg.rgba >>> 16 & 0xFF;\n  const fgB = fg.rgba >>> 8 & 0xFF;\n\n  // Calculate a threshold that when below a color will be treated as transpart when the sum of\n  // channel value differs. This helps improve rendering when glyphs overlap with others. This\n  // threshold is calculated relative to the difference between the background and foreground to\n  // ensure important details of the glyph are always shown, even when the contrast ratio is low.\n  // The number 12 is largely arbitrary to ensure the pixels that escape the cell in the test case\n  // were covered (fg=#8ae234, bg=#c4a000).\n  const threshold = Math.floor((Math.abs(r - fgR) + Math.abs(g - fgG) + Math.abs(b - fgB)) / 12);\n\n  // Set alpha channel of relevent pixels to 0\n  let isEmpty = true;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    // Check exact match\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      // Check the threshold based difference\n      if (enableThresholdCheck &&\n          (Math.abs(imageData.data[offset] - r) +\n          Math.abs(imageData.data[offset + 1] - g) +\n          Math.abs(imageData.data[offset + 2] - b)) < threshold) {\n        imageData.data[offset + 3] = 0;\n      } else {\n        isEmpty = false;\n      }\n    }\n  }\n\n  return isEmpty;\n}\n\nfunction checkCompletelyTransparent(imageData: ImageData): boolean {\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset + 3] > 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction createCanvas(document: Document, width: number, height: number): HTMLCanvasElement {\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return channels.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb',\n * '#rrggbbaa').\n */\nexport namespace css {\n  // Attempt to set get the shared canvas context\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  try {\n    // This is guaranteed to run in the first window, so document should be correct\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n  catch {\n    // noop\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return channels.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return channels.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return channels.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  export function blend(bg: number, fg: number): number {\n    $a = (fg & 0xFF) / 0xFF;\n    if ($a === 1) {\n      return fg;\n    }\n    const fgR = (fg >> 24) & 0xFF;\n    const fgG = (fg >> 16) & 0xFF;\n    const fgB = (fg >> 8) & 0xFF;\n    const bgR = (bg >> 24) & 0xFF;\n    const bgG = (bg >> 16) & 0xFF;\n    const bgB = (bg >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    return channels.toRgba($r, $g, $b);\n  }\n\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    this.clearListeners();\n    this._disposed = true;\n  }\n\n  public clearListeners(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n\nexport function runAndSubscribe<T>(event: IEvent<T>, handler: (e: T | undefined) => any): IDisposable {\n  handler(undefined);\n  return event(e => handler(e));\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n  private _value?: T;\n  private _isDisposed = false;\n\n  /**\n   * Gets the value if it exists.\n   */\n  public get value(): T | undefined {\n    return this._isDisposed ? undefined : this._value;\n  }\n\n  /**\n   * Sets the value, disposing of the old value if it exists.\n   */\n  public set value(value: T | undefined) {\n    if (this._isDisposed || value === this._value) {\n      return;\n    }\n    this._value?.dispose();\n    this._value = value;\n  }\n\n  /**\n   * Resets the stored value and disposes of the previously stored value.\n   */\n  public clear(): void {\n    this.value = undefined;\n  }\n\n  public dispose(): void {\n    this._isDisposed = true;\n    this._value?.dispose();\n    this._value = undefined;\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\ndeclare const process: unknown;\n\nexport const isNode = (typeof process !== 'undefined' && 'title' in (process as any)) ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n  public isOverline(): number      { return this.bg & BgFlags.OVERLINE; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n  public getUnderlineVariantOffset(): number {\n    return this.extended.underlineVariantOffset;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  public get underlineVariantOffset(): number {\n    const val = (this._ext & ExtFlags.VARIANT_OFFSET) >> 29;\n    if (val < 0) {\n      return val ^ 0xFFFFFFF8;\n    }\n    return val;\n  }\n  public set underlineVariantOffset(value: number) {\n    this._ext &= ~ExtFlags.VARIANT_OFFSET;\n    this._ext |= (value << 29) & ExtFlags.VARIANT_OFFSET;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000,\n  OVERLINE = 0x40000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..29\n   */\n  UNDERLINE_STYLE = 0x1C000000,\n\n  /**\n   * bit 30..32\n   *\n   * An optional variant for the glyph, this can be used for example to offset underlines by a\n   * number of pixels to create a perfect pattern.\n   */\n  VARIANT_OFFSET = 0xE0000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate\n      // pair conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  trace: LogLevelEnum.TRACE,\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  private _logLevel: LogLevelEnum = LogLevelEnum.OFF;\n  public get logLevel(): LogLevelEnum { return this._logLevel; }\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n\n    // For trace logging, assume the latest created log service is valid\n    traceLogger = this;\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, (this._optionsService.options.logger ? '' : LOG_PREFIX) + message, ...optionalParams);\n  }\n\n  public trace(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.TRACE) {\n      this._log(this._optionsService.options.logger?.trace.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.DEBUG) {\n      this._log(this._optionsService.options.logger?.debug.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.INFO) {\n      this._log(this._optionsService.options.logger?.info.bind(this._optionsService.options.logger) ?? console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.WARN) {\n      this._log(this._optionsService.options.logger?.warn.bind(this._optionsService.options.logger) ?? console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.ERROR) {\n      this._log(this._optionsService.options.logger?.error.bind(this._optionsService.options.logger) ?? console.error, message, optionalParams);\n    }\n  }\n}\n\nlet traceLogger: ILogService;\nexport function setTraceLogger(logger: ILogService): void {\n  traceLogger = logger;\n}\n\n/**\n * A decorator that can be used to automatically log trace calls to the decorated function.\n */\nexport function traceCall(_target: any, key: string, descriptor: any): any {\n  if (typeof descriptor.value !== 'function') {\n    throw new Error('not supported');\n  }\n  const fnKey = 'value';\n  const fn = descriptor.value;\n  descriptor[fnKey] = function (...args: any[]) {\n    // Early exit\n    if (traceLogger.logLevel !== LogLevelEnum.TRACE) {\n      return fn.apply(this, args);\n    }\n\n    traceLogger.trace(`GlyphRenderer#${fn.name}(${args.map(e => JSON.stringify(e)).join(', ')})`);\n    const result = fn.apply(this, args);\n    traceLogger.trace(`GlyphRenderer#${fn.name} return`, result);\n    return result;\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, CursorInactiveStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler, IWindowsPty, ILogger } from '@xterm/xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<TArgs extends any[]> = TArgs extends [] ? []\n  : TArgs extends [...infer TFirst, infer TLast] ? TLast extends IBrandedService ? GetLeadingNonServiceArgs<TFirst> : TArgs\n    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  TRACE = 0,\n  DEBUG = 1,\n  INFO = 2,\n  WARN = 3,\n  ERROR = 4,\n  OFF = 5\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  readonly logLevel: LogLevelEnum;\n\n  trace(message: any, ...optionalParams: any[]): void;\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  cursorInactiveStyle?: CursorInactiveStyle;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  documentOverride?: any | null;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  ignoreBracketedPasteMode?: boolean;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  logger?: ILogger | null;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rescaleOverlappingGlyphs?: boolean;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowsPty?: IWindowsPty;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\n/*\n * Width and Grapheme_Cluster_Break properties of a character as a bit mask.\n *\n * bit 0: shouldJoin - should combine with preceding character.\n * bit 1..2: wcwidth - see UnicodeCharWidth.\n * bit 3..31: class of character (currently only 4 bits are used).\n *   This is used to determined grapheme clustering - i.e. which codepoints\n *   are to be combined into a single compound character.\n *\n * Use the UnicodeService static function createPropertyValue to create a\n * UnicodeCharProperties; use extractShouldJoin, extractWidth, and\n * extractCharKind to extract the components.\n */\nexport type UnicodeCharProperties = number;\n\n/**\n * Width in columns of a character.\n * In a CJK context, \"half-width\" characters (such as Latin) are width 1,\n * while \"full-width\" characters (such as Kanji) are 2 columns wide.\n * Combining characters (such as accents) are width 0.\n */\nexport type UnicodeCharWidth = 0 | 1 | 2;\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): UnicodeCharWidth;\n  getStringCellWidth(s: string): number;\n  /**\n   * Return character width and type for grapheme clustering.\n   * If preceding != 0, it is the return code from the previous character;\n   * in that case the result specifies if the characters should be joined.\n   */\n  charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): UnicodeCharWidth;\n  charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport type { ITerminalAddon, Terminal } from '@xterm/xterm';\nimport type { WebglAddon as IWebglApi } from '@xterm/addon-webgl';\nimport { ICharacterJoinerService, ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { ITerminal } from 'browser/Types';\nimport { EventEmitter, forwardEvent } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { getSafariVersion, isSafari } from 'common/Platform';\nimport { ICoreService, IDecorationService, ILogService, IOptionsService } from 'common/services/Services';\nimport { IWebGL2RenderingContext } from './Types';\nimport { WebglRenderer } from './WebglRenderer';\nimport { setTraceLogger } from 'common/services/LogService';\n\nexport class WebglAddon extends Disposable implements ITerminalAddon , IWebglApi {\n  private _terminal?: Terminal;\n  private _renderer?: WebglRenderer;\n\n  private readonly _onChangeTextureAtlas = this.register(new EventEmitter<HTMLCanvasElement>());\n  public readonly onChangeTextureAtlas = this._onChangeTextureAtlas.event;\n  private readonly _onAddTextureAtlasCanvas = this.register(new EventEmitter<HTMLCanvasElement>());\n  public readonly onAddTextureAtlasCanvas = this._onAddTextureAtlasCanvas.event;\n  private readonly _onRemoveTextureAtlasCanvas = this.register(new EventEmitter<HTMLCanvasElement>());\n  public readonly onRemoveTextureAtlasCanvas = this._onRemoveTextureAtlasCanvas.event;\n  private readonly _onContextLoss = this.register(new EventEmitter<void>());\n  public readonly onContextLoss = this._onContextLoss.event;\n\n  constructor(\n    private _preserveDrawingBuffer?: boolean\n  ) {\n    if (isSafari && getSafariVersion() < 16) {\n      // Perform an extra check to determine if Webgl2 is manually enabled in developer settings\n      const contextAttributes = {\n        antialias: false,\n        depth: false,\n        preserveDrawingBuffer: true\n      };\n      const gl = document.createElement('canvas').getContext('webgl2', contextAttributes) as IWebGL2RenderingContext;\n      if (!gl) {\n        throw new Error('Webgl2 is only supported on Safari 16 and above');\n      }\n    }\n    super();\n  }\n\n  public activate(terminal: Terminal): void {\n    const core = (terminal as any)._core as ITerminal;\n    if (!terminal.element) {\n      this.register(core.onWillOpen(() => this.activate(terminal)));\n      return;\n    }\n\n    this._terminal = terminal;\n    const coreService: ICoreService = core.coreService;\n    const optionsService: IOptionsService = core.optionsService;\n\n    const unsafeCore = core as any;\n    const renderService: IRenderService = unsafeCore._renderService;\n    const characterJoinerService: ICharacterJoinerService = unsafeCore._characterJoinerService;\n    const charSizeService: ICharSizeService = unsafeCore._charSizeService;\n    const coreBrowserService: ICoreBrowserService = unsafeCore._coreBrowserService;\n    const decorationService: IDecorationService = unsafeCore._decorationService;\n    const logService: ILogService = unsafeCore._logService;\n    const themeService: IThemeService = unsafeCore._themeService;\n\n    // Set trace logger just in case it hasn't been yet which could happen when the addon is\n    // bundled separately to the core module\n    setTraceLogger(logService);\n\n    this._renderer = this.register(new WebglRenderer(\n      terminal,\n      characterJoinerService,\n      charSizeService,\n      coreBrowserService,\n      coreService,\n      decorationService,\n      optionsService,\n      themeService,\n      this._preserveDrawingBuffer\n    ));\n    this.register(forwardEvent(this._renderer.onContextLoss, this._onContextLoss));\n    this.register(forwardEvent(this._renderer.onChangeTextureAtlas, this._onChangeTextureAtlas));\n    this.register(forwardEvent(this._renderer.onAddTextureAtlasCanvas, this._onAddTextureAtlasCanvas));\n    this.register(forwardEvent(this._renderer.onRemoveTextureAtlasCanvas, this._onRemoveTextureAtlasCanvas));\n    renderService.setRenderer(this._renderer);\n\n    this.register(toDisposable(() => {\n      const renderService: IRenderService = (this._terminal as any)._core._renderService;\n      renderService.setRenderer((this._terminal as any)._core._createRenderer());\n      renderService.handleResize(terminal.cols, terminal.rows);\n    }));\n  }\n\n  public get textureAtlas(): HTMLCanvasElement | undefined {\n    return this._renderer?.textureAtlas;\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderer?.clearTextureAtlas();\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","self","INDICES_PER_CELL","BYTES_PER_CELL","Float32Array","BYTES_PER_ELEMENT","$glyph","$i","$leftCellPadding","$clippedPixels","GlyphRenderer","Disposable","constructor","_terminal","_gl","_dimensions","_optionsService","super","_activeBuffer","_vertices","count","attributes","attributesBuffers","gl","this","undefined","TextureAtlas","maxAtlasPages","Math","min","throwIfFalsy","getParameter","MAX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","_program","createProgram","maxFragmentShaderTextureUnits","textureConditionals","i","createFragmentShaderSource","register","toDisposable","deleteProgram","_projectionLocation","getUniformLocation","_resolutionLocation","_textureLocation","_vertexArrayObject","createVertexArray","bindVertexArray","unitQuadVertices","unitQuadVerticesBuffer","createBuffer","deleteBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","unitQuadElementIndices","Uint8Array","elementIndicesBuffer","ELEMENT_ARRAY_BUFFER","_attributesBuffer","vertexAttribDivisor","useProgram","textureUnits","Int32Array","uniform1iv","uniformMatrix4fv","PROJECTION_MATRIX","_atlasTextures","glTexture","GLTexture","createTexture","deleteTexture","texture","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","RGBA","UNSIGNED_BYTE","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","handleResize","beginFrame","_atlas","updateCell","x","y","code","bg","fg","ext","chars","width","lastBg","_updateCell","array","cols","NULL_CELL_CODE","length","getRasterizedGlyphCombinedChar","getRasterizedGlyph","floor","device","cell","char","offset","left","top","size","canvas","height","texturePage","texturePositionClipSpace","pages","sizeClipSpace","rawOptions","rescaleOverlappingGlyphs","allowRescaling","fill","clear","terminal","newCount","rows","viewport","uniform2f","render","renderModel","activeBuffer","bufferLength","lineLengths","si","sub","subarray","set","STREAM_DRAW","version","_bindAtlasPageTexture","drawElementsInstanced","TRIANGLE_STRIP","setAtlas","atlas","generateMipmap","setDimensions","dimensions","BYTES_PER_RECTANGLE","Vertices","$rgba","$x1","$y1","$r","$g","$b","$a","RectangleRenderer","_themeService","_verticesCursor","_updateCachedColors","colors","onChangeColors","e","_updateViewportRectangle","renderBackgrounds","_renderVertices","renderCursor","vertices","DYNAMIC_DRAW","_bgFloat","_colorToFloat32Array","background","_cursorFloat","cursor","_addRectangleFloat","updateBackgrounds","model","currentStartX","currentBg","currentFg","currentInverse","modelIndex","inverse","rectangleCount","RENDER_MODEL_INDICIES_PER_CELL","cells","RENDER_MODEL_BG_OFFSET","RENDER_MODEL_FG_OFFSET","_updateRectangle","updateCursor","style","dpr","cursorWidth","startX","endX","ansi","rgba","foreground","expandFloat32Array","_addRectangle","x1","y1","r","g","b","a","color","RENDER_MODEL_EXT_OFFSET","COMBINED_CHAR_BIT_MASK","Uint32Array","selection","createSelectionRenderModel","resize","indexCount","WebglRenderer","_characterJoinerService","_charSizeService","_coreBrowserService","_coreService","_decorationService","preserveDrawingBuffer","_cursorBlinkStateManager","MutableDisposable","_charAtlasDisposable","_observerDisposable","_model","RenderModel","_workCell","CellData","_workCell2","_rectangleRenderer","_glyphRenderer","_onChangeTextureAtlas","EventEmitter","onChangeTextureAtlas","event","_onAddTextureAtlasCanvas","onAddTextureAtlasCanvas","_onRemoveTextureAtlasCanvas","onRemoveTextureAtlasCanvas","_onRequestRedraw","onRequestRedraw","_onContextLoss","onContextLoss","_handleColorChange","_cellColorResolver","CellColorResolver","_core","_renderLayers","LinkRenderLayer","screenElement","linkifier","createRenderDimensions","_devicePixelRatio","_updateDimensions","_updateCursorBlink","onOptionChange","_handleOptionsChanged","_canvas","mainDocument","createElement","contextAttributes","antialias","depth","getContext","Error","addDisposableDomListener","console","log","preventDefault","_contextRestorationTimeout","setTimeout","warn","fire","clearTimeout","removeTerminalFromCache","_initializeWebGLState","_requestRedrawViewport","value","observeDevicePixelDimensions","window","w","h","_setCanvasDevicePixelDimensions","onWindowChange","appendChild","_isAttached","document","body","contains","l","dispose","parentElement","removeChild","textureAtlas","_charAtlas","_refreshCharAtlas","_clearModel","handleDevicePixelRatioChange","css","handleCharSizeChanged","handleBlur","pause","handleFocus","resume","handleSelectionChanged","start","end","columnSelectMode","update","handleCursorMove","restartBlinkAnimation","acquireTextureAtlas","getDisposeArrayDisposable","forwardEvent","warmUp","clearGlyphRenderer","clearTextureAtlas","clearTexture","reset","registerCharacterJoiner","handler","deregisterCharacterJoiner","joinerId","renderRows","handleGridChanged","_updateModel","isCursorVisible","options","cursorBlink","CursorBlinkStateManager","_requestRedrawCursor","row","line","joinedRanges","isJoined","lastCharX","range","j","clamp","cursorY","buffer","active","baseY","viewportRelativeCursorY","ydisp","cursorX","lastCursorX","isCursorInitialized","isCursorHidden","modelUpdated","lines","get","getJoinedCharacters","result","loadCell","shift","JoinedCellData","translateToString","getChars","getCode","resolve","getWidth","isFocused","cursorStyle","cursorInactiveStyle","cursorAccent","NULL_CELL_CHAR","ceil","lineHeight","round","letterSpacing","AttributeData","firstCell","content","combinedData","_width","isCombined","setFromCharData","getAsCharData","max","createShader","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","error","getShaderInfoLog","deleteShader","vertexSource","fragmentSource","program","attachShader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","newLength","newArray","BaseRenderLayer","_container","id","zIndex","_alpha","_deviceCharWidth","_deviceCharHeight","_deviceCellWidth","_deviceCellHeight","_deviceCharLeft","_deviceCharTop","classList","add","toString","_initCanvas","remove","_ctx","alpha","_clearAll","startRow","endRow","_setTransparency","oldCanvas","cloneNode","replaceChild","colorSet","dim","_fillBottomLineAtCells","fillRect","clearRect","fillStyle","_clearCells","_fillCharTrueColor","font","_getFont","textBaseline","TEXT_BASELINE","_clipCell","fillText","beginPath","rect","clip","isBold","isItalic","fontWeightBold","fontWeight","fontSize","fontFamily","container","linkifier2","coreBrowserService","optionsService","themeService","onShowLinkUnderline","_handleShowLinkUnderline","onHideLinkUnderline","_handleHideLinkUnderline","_state","_clearCurrentLink","middleRowCount","y2","x2","INVERTED_DEFAULT_COLOR","is256Color","node","addEventListener","disposed","removeEventListener","$colors","$fg","$bg","$hasFg","$hasBg","$isSelected","$variantOffset","_optionService","_selectionRenderModel","deviceCellWidth","extended","underlineStyle","lineWidth","forEachDecorationAtCell","d","backgroundColorRGB","foregroundColorRGB","isCellSelected","blend","selectionBackgroundOpaque","selectionInactiveBackgroundOpaque","selectionForeground","treatGlyphAsBackgroundColor","charAtlasCache","deviceCellHeight","deviceCharWidth","deviceCharHeight","devicePixelRatio","newConfig","generateConfig","entry","ownedByIndex","ownedBy","indexOf","configEquals","config","splice","push","core","newEntry","unicodeService","index","clonedColors","NULL_COLOR","selectionBackgroundTransparent","selectionInactiveBackgroundTransparent","slice","contrastCache","halfContrastCache","customGlyphs","allowTransparency","drawBoldTextInBrightColors","minimumContrastRatio","colorCode","DIM_OPACITY","isFirefox","isLegacyEdge","_renderCallback","_restartInterval","isPaused","_blinkStartTimeout","_blinkInterval","clearInterval","_animationFrame","cancelAnimationFrame","_animationTimeRestarted","Date","now","requestAnimationFrame","timeToStart","BLINK_INTERVAL","time","setInterval","blockElementDefinitions","patternCharacterDefinitions","boxDrawingDefinitions","xp","yp","powerlineDefinitions","rightPadding","leftPadding","ctx","c","xOffset","yOffset","blockElementDefinition","charDefinition","box","xEighth","yEighth","drawBlockElementChar","patternDefinition","patternSet","cachedPatterns","Map","pattern","tmpCanvas","ownerDocument","tmpCtx","imageData","ImageData","startsWith","parseInt","substring","split","map","parseFloat","data","putImageData","createPattern","drawPatternChar","boxDrawingDefinition","strokeStyle","instructions","Object","entries","actualInstructions","Number","instruction","f","svgToCanvasInstructionMap","args","translateArgs","stroke","closePath","drawBoxDrawingChar","powerlineDefinition","clipRegion","Path2D","cssLineWidth","drawPowerlineChar","bezierCurveTo","lineTo","moveTo","cellWidth","cellHeight","doClamp","element","parentWindow","callback","observer","ResizeObserver","find","target","disconnect","devicePixelContentBoxSize","inlineSize","blockSize","observe","isPowerlineGlyph","codepoint","isEmoji","glyphSizeX","isNerdFontGlyph","isBoxOrBlockGlyph","currentOffset","SelectionRenderModel","hasSelection","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","startCol","endCol","selectionStart","selectionEnd","viewportY","buffers","NULL_RASTERIZED_GLYPH","texturePosition","_pages","_document","_config","_unicodeService","_didWarmUp","_cacheMap","FourKeyMap","_cacheMapCombined","_activePages","_workBoundingBox","bottom","right","_workAttributeData","_textureSize","_requestClearModel","_createNewPage","_tmpCanvas","createCanvas","TMP_CANVAS_GLYPH_PADDING","_tmpCtx","willReadFrequently","page","_doWarmUp","queue","IdleTaskQueue","enqueue","DEFAULT_COLOR","DEFAULT_EXT","rasterizedGlyph","_drawToCache","currentRow","pagesBySize","filter","sort","percentageUsed","sameSizeI","mergingPages","sortedMergingPagesIndexes","glyphs","mergedPageIndex","mergedPage","_mergePages","_deletePage","newPage","AtlasPage","mergedSize","p","drawImage","pageIndex","adjustingPage","restrictToCellHeight","_getFromCacheMap","cacheMap","key","_getColorFromAnsiIndex","idx","_getBackgroundColor","bgColorMode","bgColor","arr","toColorRGB","channels","toColor","opaque","_getForegroundColor","fgColorMode","fgColor","bold","excludeFromContrastRatioDemands","minimumContrastColor","_getMinimumContrastColor","multiplyOpacity","_resolveBackgroundRgba","_resolveForegroundRgba","cache","_getContrastCache","adjustedColor","getColor","bgRgba","fgRgba","ensureContrastRatio","setColor","codeOrChars","String","fromCharCode","allowedWidth","allowedHeight","save","isInvisible","isInverse","isDim","italic","underline","isUnderline","strikethrough","isStrikethrough","overline","isOverline","getFgColor","getFgColorMode","getBgColor","getBgColorMode","temp","temp2","backgroundColor","globalCompositeOperation","fontStyle","powerlineGlyph","charCodeAt","restrictedPowerlineGlyph","isRestrictedPowerlineGlyph","foregroundColor","padding","customGlyph","tryDrawCustomChar","chWidth","enableClearThresholdCheck","wcwidth","getStringCellWidth","isUnderlineColorDefault","isUnderlineColorRGB","getUnderlineColor","join","xLeft","yTop","yMid","yBot","nextOffset","getUnderlineVariantOffset","xChLeft","xChRight","xChMid","yCurlyBot","yCurlyTop","offsetWidth","setLineDash","computeNextVariantOffset","lineRatio","gapRatio","xChWidth","gap","restore","metrics","measureText","actualBoundingBoxDescent","strokeText","isBeyondCellBounds","clearColor","getImageData","isEmpty","checkCompletelyTransparent","_findGlyphBoundingBox","activePage","activeRow","fixedRows","wasPageAndRowFound","candidatePage","addGlyph","boundingBox","restrictedGlyph","found","alphaOffset","_usedPixels","_glyphs","glyph","sourcePages","enableThresholdCheck","fgR","fgG","fgB","threshold","abs","rgb","toPaddedHex","s","contrastRatio","l1","l2","toCss","toRgba","opacity","toChannels","bgR","bgG","bgB","isOpaque","ratio","rgbaColor","factor","$ctx","$litmusColor","createLinearGradient","match","repeat","rgbaMatch","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","cr","increaseLuminance","bgL","fgL","resultA","resultARatio","resultB","_listeners","_disposed","_event","listener","arg1","arg2","call","clearListeners","from","to","disposeArray","disposables","_disposables","_isDisposed","unregister","_value","TwoKeyMap","_data","first","second","third","fourth","isNode","process","userAgent","navigator","platform","includes","isSafari","test","majorVersion","isMac","isIpad","isIphone","isWindows","isLinux","isChromeOS","TaskQueue","_tasks","_i","task","_start","flush","_idleCallback","_cancelCallback","_requestCallback","_process","bind","deadline","taskDuration","longestTask","lastDeadlineRemaining","timeRemaining","deadlineRemaining","PriorityTaskQueue","_createDeadline","identifier","duration","requestIdleCallback","cancelIdleCallback","_queue","ExtendedAttrs","fromColorRGB","clone","newObj","hasExtendedAttrs","isBlink","isProtected","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","updateExtended","underlineColor","getUnderlineColorMode","isUnderlineColorPalette","getUnderlineStyle","underlineVariantOffset","_urlId","_ext","urlId","val","fromCharData","obj","stringFromCodePoint","CHAR_DATA_ATTR_INDEX","combined","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","DEFAULT_ATTR","CHAR_DATA_CODE_INDEX","NULL_CELL_WIDTH","WHITESPACE_CELL_CHAR","WHITESPACE_CELL_WIDTH","WHITESPACE_CELL_CODE","codePoint","_interim","decode","input","startPos","interim","byte1","byte2","byte3","byte4","discardInterim","cp","tmp","pos","missing","fourStop","optionsKeyToLogLevel","trace","LogLevelEnum","TRACE","debug","DEBUG","info","INFO","WARN","ERROR","off","OFF","traceLogger","LogService","logLevel","_logLevel","_updateLogLevel","onSpecificOptionChange","_evalLazyOptionalParams","optionalParams","_log","message","logger","IOptionsService","_target","descriptor","fn","apply","name","JSON","stringify","DI_TARGET","DI_DEPENDENCIES","serviceRegistry","ctor","has","decorator","arguments","storeServiceDependency","IBufferService","createDecorator","ICoreMouseService","ICoreService","ICharsetService","IInstantiationService","ILogService","IOscLinkService","IUnicodeService","IDecorationService","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","WebglAddon","_preserveDrawingBuffer","getSafariVersion","activate","onWillOpen","coreService","unsafeCore","renderService","_renderService","characterJoinerService","charSizeService","decorationService","logService","_logService","setTraceLogger","_renderer","setRenderer","_createRenderer"],"sourceRoot":""}